/*Atomic Bulldog kss theme version 1.0.0*/
/*Min and Max mixins*/
@import url("https://fonts.googleapis.com/css?family=Open+Sans:400,700");
/*! modern-normalize | MIT License | https://github.com/sindresorhus/modern-normalize */
/* Document
   ========================================================================== */
/**
 * Use a better box model (opinionated).
 */
html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

/**
 * Use a more readable tab size (opinionated).
 */
:root {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

/**
 * Correct the line height in all browsers.
 */
html {
  line-height: 1.15;
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
 */
body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct height in Firefox.
 */
hr {
  height: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Add the correct text decoration in Chrome, Edge, and Safari.
 */
abbr[title] {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp,
pre {
  font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Remove the inheritance of text transform in Edge and Firefox.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type='button']::-moz-focus-inner,
[type='reset']::-moz-focus-inner,
[type='submit']::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type='button']:-moz-focusring,
[type='reset']:-moz-focusring,
[type='submit']:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  padding: 0;
}

/**
 * Add the correct vertical alignment in Chrome and Firefox.
 */
progress {
  vertical-align: baseline;
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type='number']::-webkit-inner-spin-button,
[type='number']::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type='search']::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Chrome and Safari.
 */
summary {
  display: list-item;
}

.kss-container {
  padding-right: 1rem;
  padding-left: 1rem;
}

.kss-container:not(.is-fluid) {
  margin: 0 auto;
}

@media only screen and (min-width: 37.5em) {
  .kss-container:not(.is-fluid) {
    width: 570px;
  }
}

@media only screen and (min-width: 56.25em) {
  .kss-container:not(.is-fluid) {
    width: 860px;
  }
}

@media only screen and (min-width: 75em) {
  .kss-container:not(.is-fluid) {
    width: 820px;
  }
}

@media only screen and (min-width: 112.5em) {
  .kss-container:not(.is-fluid) {
    width: 1150px;
  }
}

.kss-brand {
  text-align: center;
}

.kss-brand p {
  color: hsl(var(--kssBrandColorH), calc(var(--kssBrandColorS) * 1%), calc(var(--kssBrandColorL) * 1%));
  font-size: 1.5rem;
  line-height: 1.1;
  margin-bottom: 1.25rem;
}

.kss-brand img {
  height: auto;
  max-width: 100%;
  margin-bottom: 1.25rem;
}

.kss-btn {
  border: 1px solid #6c757d;
  color: #6c757d;
  background-color: transparent;
  padding: 0.2rem 0.5rem;
  line-height: 1;
  display: inline-block;
}

.kss-btn:hover {
  color: #495057;
  text-decoration: underline;
}

.kss-burger-container {
  position: fixed;
  top: 0;
  right: 0;
  z-index: 20;
}

@media only screen and (min-width: 75em) {
  .kss-burger-container {
    display: none;
  }
}

.kss-burger-container:after {
  content: "";
  border-style: solid;
  border-width: 0 800px 320px 0;
  border-color: transparent hsl(var(--kssBrandColorH), calc(var(--kssBrandColorS) * 1%), calc(var(--kssBrandColorL) * 1%)) transparent transparent;
  position: absolute;
  left: 0;
  bottom: -320px;
}

button.kss-burger {
  border: none;
  background: transparent;
  position: relative;
  cursor: pointer;
  color: #ffffff;
  background-color: hsl(var(--kssBrandColorH), calc(var(--kssBrandColorS) * 1%), calc(var(--kssBrandColorL) * 1%));
  display: flex;
  padding: 0.5rem 1.25rem;
  align-items: center;
}

button.kss-burger span.burger-icon {
  display: block;
  width: 25px;
  height: 20px;
  -webkit-backface-visibility: hidden;
  -webkit-transform: translateZ(0) scale(1, 1);
}

button.kss-burger span.burger-icon:after, button.kss-burger span.burger-icon:before,
button.kss-burger span.burger-icon span {
  width: 100%;
  height: 2px;
  border-radius: 100px;
  position: absolute;
  left: 0px;
  background: #ffffff;
  -webkit-transform: rotate(0deg);
          transform: rotate(0deg);
  transition: all 0.4s;
}

button.kss-burger span.burger-icon:after, button.kss-burger span.burger-icon:before {
  content: "";
}

button.kss-burger span.burger-icon:after {
  top: 0px;
  margin-top: 0px;
}

button.kss-burger span.burger-icon:before {
  bottom: 0px;
  margin-bottom: 0px;
}

button.kss-burger span.burger-icon span {
  top: 50%;
}

button.kss-burger.is-active span.burger-icon:after {
  -webkit-transform: rotate(135deg) translate(7px, -7px);
          transform: rotate(135deg) translate(7px, -7px);
}

button.kss-burger.is-active span.burger-icon:before {
  -webkit-transform: rotate(225deg);
          transform: rotate(225deg);
  bottom: 50%;
  margin-bottom: -2px;
}

button.kss-burger.is-active span.burger-icon span {
  -webkit-transform: rotate(135deg);
          transform: rotate(135deg);
}

.kss-h1 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 2.8125rem;
  margin-bottom: 0.25rem;
  text-align: left;
}

.kss-h2 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 2rem;
  margin-bottom: 0.25rem;
  text-align: left;
}

.kss-h3 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.5rem;
  margin-bottom: 0.25rem;
  text-align: left;
}

.kss-h4 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.25rem;
  margin-bottom: 0.25rem;
  text-align: left;
}

.kss-h5 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.15rem;
  margin-bottom: 0.25rem;
  text-align: left;
}

.kss-h6 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1rem;
  margin-bottom: 0.25rem;
  text-align: left;
}

.kss-h1,
.kss-h2 {
  margin-top: 9rem;
}

.kss-h3,
.kss-h4 {
  margin-top: 3rem;
}

.kss-h5,
.kss-h6 {
  margin-top: 1.25rem;
}

.kss-h1 .kss-section__ref {
  color: hsl(var(--kssBrandColorH), calc(var(--kssBrandColorS) * 1%), calc(var(--kssBrandColorL) * 1%));
}

.kss-is-no-scroll {
  overflow: hidden;
}

.kss-navigation ul.kss-nav {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.kss-navigation ul.kss-nav ul.kss-subnav {
  list-style-type: none;
  padding-left: 0.5rem;
  margin-bottom: 1rem;
}

.kss-navigation ul.kss-nav ul.kss-subnav .kss-nav-link {
  padding: 0.25rem;
}

.kss-navigation ul.kss-nav ul.kss-subnav li.is-grandchild {
  padding-left: 0.5rem;
}

.kss-navigation .kss-nav-link {
  color: #495057;
  text-decoration: none;
  padding: 0.5rem;
  border-radius: 5px;
  display: block;
  width: 100%;
}

.kss-navigation .kss-nav-link:hover, .kss-navigation .kss-nav-link:focus {
  background-color: #e9ecef;
  outline-color: transparent;
  border-color: transparent;
  box-shadow: 0 0 0 transparent;
}

.kss-navigation .kss-nav-link.is-active {
  background-color: hsl(var(--kssBrandColorH), calc(var(--kssBrandColorS) * 1%), calc((var(--kssBrandColorL) + 20) * 1%));
}

.kss-navigation .kss-nav-link.is-active:hover, .kss-navigation .kss-nav-link.is-active:focus {
  background-color: hsl(var(--kssBrandColorH), calc(var(--kssBrandColorS) * 1%), calc((var(--kssBrandColorL) + 20) * 1%));
}

.kss-navigation .kss-nav-link .kss-nav__ref {
  font-size: calc(1rem - 0.15rem);
}

.kss-search {
  position: relative;
  margin-bottom: 1rem;
}

.kss-search #kss-search__input {
  display: block;
  border: 1px solid #adb5bd;
  padding: 0.5rem;
  color: #495057;
  transition: border-color 0.3s ease-in-out;
  outline: none;
  width: 100%;
}

.kss-search #kss-search__input:hover, .kss-search #kss-search__input:focus {
  border-color: #495057;
}

.kss-search #kss-search__list {
  list-style-type: none;
  padding: 0;
  margin: 0;
  max-height: 250px;
  overflow-y: auto;
  padding: 0.5rem;
  background-color: #ffffff;
  border: 1px solid #adb5bd;
  border-top: 0;
  display: none;
}

.kss-search #kss-search__list a {
  color: #495057;
  width: 100%;
}

.kss-search #kss-search__list a:hover, .kss-search #kss-search__list a:focus {
  color: #495057;
  text-decoration: underline;
}

.kss-sidebar {
  height: 100vh;
  padding: 1rem;
  background-color: #f8f9fa;
  overflow-y: auto;
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 10;
  display: none;
}

.kss-sidebar.is-active {
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  padding: 3rem 1rem;
}

@media only screen and (min-width: 75em) {
  .kss-sidebar {
    display: block;
  }
  .kss-sidebar.is-active {
    position: relative;
    top: auto;
    left: auto;
    width: 100%;
    padding: 1rem;
  }
}

.kss-section__permalink:hover, .kss-section__permalink:focus {
  color: hsl(var(--kssBrandColorH), calc(var(--kssBrandColorS) * 1%), calc(var(--kssBrandColorL) * 1%));
  text-decoration: underline;
}

.kss-section__source {
  color: #6c757d;
  font-size: calc(1rem - 0.1rem);
}

.kss-section__description {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.kss-section__description p {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1rem;
}

.kss-section__description a {
  color: hsl(var(--kssBrandColorH), calc(var(--kssBrandColorS) * 1%), calc(var(--kssBrandColorL) * 1%));
}

.kss-section__description a:hover, .kss-section__description a:focus {
  color: hsl(var(--kssBrandColorH), calc(var(--kssBrandColorS) * 1%), calc(var(--kssBrandColorL) * 1%));
  text-decoration: underline;
}

.kss-section__description code {
  background-color: #dee2e6;
  border-radius: 5px;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.kss-section__description blockquote {
  background-color: #f8f9fa;
  padding: 1rem;
  border-left: 0.5rem solid #dee2e6;
  margin-bottom: 1rem;
}

.kss-section__description .kss-iframe {
  width: 100%;
  height: 500px;
}

.kss-section__example-container {
  border-radius: 5px;
  border: 3px solid #dee2e6;
}

.kss-section__example-container pre[class*="language-"] {
  margin: 0;
}

.kss-section__example-container code[class*="language-"],
.kss-section__example-container pre[class*="language-"] {
  background-color: #dee2e6;
  /* Works in Safari */
}

.kss-section__example-container code[class*="language-"] ::-moz-selection,
.kss-section__example-container pre[class*="language-"] ::-moz-selection {
  background-color: hsl(var(--kssBrandColorH), calc(var(--kssBrandColorS) * 1%), calc(var(--kssBrandColorL) * 1%));
  color: #000000;
}

.kss-section__example-container code[class*="language-"] ::selection,
.kss-section__example-container pre[class*="language-"] ::selection {
  background-color: hsl(var(--kssBrandColorH), calc(var(--kssBrandColorS) * 1%), calc(var(--kssBrandColorL) * 1%));
  color: #000000;
}

.kss-section__example-container .kss-section__examples {
  padding: 1rem;
  overflow-x: auto;
}

.kss-section__example-container .kss-section__examples .kss-modifiers__heading {
  font-size: 1.5rem;
}

.kss-section__example-container .kss-section__examples code.kss-modifiers__name {
  background-color: #dee2e6;
  border-radius: 5px;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  margin-top: 1.5rem;
}

.kss-section__example-container .kss-section__examples .kss-modifiers__example {
  margin-top: 1rem;
  margin-bottom: 3rem;
  position: relative;
}

.kss-section__example-container .kss-section__examples .kss-modifiers__example:last-child {
  margin-bottom: 0;
}

.kss-section__example-container .kss-section__examples .kss-box {
  background: hsl(var(--kssBrandColorH), calc(var(--kssBrandColorS) * 1%), calc(var(--kssBrandColorL) * 1%));
  color: white;
  padding: 1rem;
  width: 100%;
  height: 100%;
}

#kss-map-colors .kss-color-item {
  display: grid;
  grid-gap: 1rem;
  grid-template-columns: repeat(2, 1fr);
  margin-bottom: 1rem;
  padding: 1rem;
  border: 1px solid #CCCCCC;
  background-color: #f5f5f5;
}

@media (min-width: 1025px) {
  #kss-map-colors .kss-color-item {
    grid-template-columns: repeat(3, 1fr);
  }
}

#kss-map-colors .kss-color-item .kss-color-item-child {
  padding: 4px;
  padding-top: 80px;
  border: 1px solid #CCCCCC;
}

#kss-map-colors .kss-color-item .kss-color-item-child:first-child {
  grid-column: span 2;
}

@media (min-width: 1025px) {
  #kss-map-colors .kss-color-item .kss-color-item-child:first-child {
    grid-column: auto;
    grid-row: span 2;
  }
}

#kss-map-colors .kss-color-item .kss-color-item-child .kss-color-item-legend {
  padding: 0.5rem 1rem;
  background-color: #ffffff;
  height: 100%;
}

#kss-map-colors .kss-color-item .kss-color-item-child .kss-color-item-legend p:nth-last-child(1) {
  margin-bottom: 0;
}

#kss-map-colors .kss-color-item .kss-color-item-child .kss-color-item-legend p:first-child {
  font-weight: bold;
}

.kss-markdown {
  margin-top: 9rem;
}

.kss-markdown h1 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 2.8125rem;
  margin-bottom: 0.25rem;
}

.kss-markdown h2 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 2rem;
  margin-bottom: 0.25rem;
}

.kss-markdown h3 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.5rem;
  margin-bottom: 0.25rem;
}

.kss-markdown h4 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.25rem;
  margin-bottom: 0.25rem;
}

.kss-markdown h5 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1.15rem;
  margin-bottom: 0.25rem;
}

.kss-markdown h6 {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1rem;
  margin-bottom: 0.25rem;
}

.kss-markdown h1,
.kss-markdown h2 {
  margin-top: 9rem;
}

.kss-markdown h3,
.kss-markdown h4 {
  margin-top: 3rem;
}

.kss-markdown h5,
.kss-markdown h6 {
  margin-top: 1.25rem;
}

.kss-markdown a {
  color: hsl(var(--kssBrandColorH), calc(var(--kssBrandColorS) * 1%), calc(var(--kssBrandColorL) * 1%));
}

.kss-markdown a:hover, .kss-markdown a:focus {
  color: hsl(var(--kssBrandColorH), calc(var(--kssBrandColorS) * 1%), calc(var(--kssBrandColorL) * 1%));
  text-decoration: underline;
}

.kss-markdown code {
  background-color: #dee2e6;
  border-radius: 5px;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.kss-markdown blockquote {
  background-color: #f8f9fa;
  padding: 1rem;
  border-left: 0.5rem solid #dee2e6;
  margin-bottom: 1rem;
}

.kss-markdown p {
  color: #000000;
  font-family: "Open Sans", "Helvetica Neue", Arial, sans-serif;
  font-size: 1rem;
}

.kss-markdown img {
  height: auto;
  max-width: 100%;
}

.kss-markdown pre {
  margin: 0;
  padding: 1rem;
  border-radius: 5px;
}

.kss-markdown pre code,
.kss-markdown pre {
  background-color: #dee2e6;
}

.kss-page-container {
  background-color: #ffffff;
}

@supports (display: grid) {
  @media only screen and (min-width: 75em) {
    .kss-page-container:not(.kss-is-full-width) {
      display: grid;
      grid-template-columns: 320px 1fr;
      grid-template-areas: "sidebar main" "sidebar footer";
      grid-gap: 1.25rem;
    }
    .kss-page-container:not(.kss-is-full-width) .kss-sidebar {
      grid-area: sidebar;
    }
    .kss-page-container:not(.kss-is-full-width) .kss-main {
      grid-area: main;
      background-color: #ffffff;
    }
    .kss-page-container:not(.kss-is-full-width) .kss-footer {
      grid-area: footer;
      align-self: end;
    }
  }
}

@supports not (display: grid) {
  @supports (display: flex) {
    @media only screen and (min-width: 75em) {
      .kss-page-container:not(.kss-is-full-width) {
        display: flex;
      }
      .kss-page-container:not(.kss-is-full-width) .kss-sidebar {
        width: 320px;
      }
      .kss-page-container:not(.kss-is-full-width) .kss-main {
        flex: 1;
      }
    }
  }
}

@media only screen and (-ms-high-contrast: active) and (min-width: 75em), only screen and (-ms-high-contrast: none) and (min-width: 75em) {
  .kss-page-container:not(.kss-is-full-width) {
    display: flex;
  }
  .kss-page-container:not(.kss-is-full-width) .kss-sidebar {
    width: 320px;
  }
  .kss-page-container:not(.kss-is-full-width) .kss-main {
    flex: 1;
  }
}

@supports (display: grid) {
  @media only screen and (min-width: 75em) {
    .kss-page-container.kss-is-full-width {
      display: grid;
      grid-template-columns: 1fr;
      grid-template-areas: "main" "sidebar" "footer";
    }
    .kss-page-container.kss-is-full-width .kss-sidebar {
      grid-area: sidebar;
      height: auto;
    }
    .kss-page-container.kss-is-full-width .kss-main {
      grid-area: main;
    }
    .kss-page-container.kss-is-full-width .kss-footer {
      grid-area: footer;
      align-self: end;
    }
  }
}

.kss-page-container.kss-is-full-width .kss-container {
  width: 100vw;
  padding: 0;
}

.kss-page-container.kss-is-full-width .kss-container .kss-section__example-container {
  border-left: 0;
  border-right: 0;
  border-radius: 0;
}

.kss-page-container.kss-is-full-width .kss-container .kss-section__example-container .kss-section__examples {
  padding: 0;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0b21pYy1idWxsZG9nLWtzcy10aGVtZS5zY3NzIiwibWl4aW5zL19tZWRpYS1xdWVyaWVzLnNjc3MiLCJ2YXJpYWJsZXMvX2ZvbnQtZmFtaWxpZXMuc2NzcyIsInZlbmRvcnMvX21vZGVybi1ub3JtYWxpemUuc2NzcyIsImF0b21pYy1idWxsZG9nLWtzcy10aGVtZS5jc3MiLCJsYXlvdXRzL19rc3MtY29udGFpbmVyLnNjc3MiLCJ2YXJpYWJsZXMvX2NvbnRhaW5lci1zaXplcy5zY3NzIiwiYXRvbXMvX2tzcy1icmFuZC5zY3NzIiwidmFyaWFibGVzL19jb2xvcnMuc2NzcyIsInZhcmlhYmxlcy9fc3BhY2Vycy5zY3NzIiwiYXRvbXMvX2tzcy1idG4uc2NzcyIsImF0b21zL19rc3MtYnVyZ2VyLnNjc3MiLCJhdG9tcy9fa3NzLXR5cG9ncmFwaHkuc2NzcyIsInZhcmlhYmxlcy9fZm9udC1zaXplcy5zY3NzIiwiYXRvbXMvX2tzcy1uby1zY3JvbGwuc2NzcyIsIm1vbGVjdWxlcy9fa3NzLW5hdmlnYXRpb24uc2NzcyIsIm1vbGVjdWxlcy9fa3NzLXNlYXJjaC5zY3NzIiwib3JnYW5pc21zL19rc3Mtc2lkZWJhci5zY3NzIiwib3JnYW5pc21zL19rc3Mtc2VjdGlvbi5zY3NzIiwib3JnYW5pc21zL19rc3MtbWFya2Rvd24uc2NzcyIsInRlbXBsYXRlcy9fa3NzLXBhZ2UtY29udGFpbmVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMENBQTBDO0FDQTFDLHNCQUFzQjtBQ0d0Qix5RUFBWTtBQ0haLHdGQUF3RjtBQUV4RjtnRkFDZ0Y7QUFFaEY7O0dBRUc7QUFFSDtFQUNDLHVCQUFzQjtDQUN0Qjs7QUFFRDs7O0VBR0Msb0JBQW1CO0NBQ25COztBQUVEOztHQUVHO0FBRUg7RUFDQyxpQkFBZ0I7RUFDaEIsZUFBVztLQUFYLFlBQVc7Q0FDWDs7QUFFRDs7R0FFRztBQUVIO0VBQ0Msa0JBQWlCO0NBQ2pCOztBQUVEO2dGQUNnRjtBQUVoRjs7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OztBQTlCTDtFQWlDTSxjQUFBO0VBQ0EsaUJBQWU7Q2QybEJwQjs7QUFFRDtFY3psQkssa0JBQUE7Q2QybEJKOztBQUVEO0VjemxCTSwwQlRsRnNCO0VTbUZ0QixtQkFBa0I7RUFLbkIsc0JBQUE7RWR1bEJILHVCQUF1QjtFY3ZvQnpCLG1CQUFBO0NkeW9CQzs7QUFFRDtFYzNvQkEsaUJBQUE7RUFtRE0sb0JWL0ZBO0VVZ0dBLG1CVnhFd0I7Q0ptcUI3Qjs7QUFFRDtFY3psQkssaUJBQUE7Q2QybEJKOztBQUVEO0VjdGxCSSwyR0FBYztFQUNkLGFBQUE7RUFDQSxjQUFhO0VBQ2IsWUFBUztFQUNULGFBQVE7Q2R3bEJYOztBQUVEO0VjdmxCSSxjQUFRO0VBVlosZUFBZTtFZG9tQmIsc0NjemxCMkI7RWQwbEIzQixvQmMzakJDO0VkNGpCRCxjQUFjO0VBQ2QsMEJBQTBCO0Vjdm1CNUIsMEJBQ0U7Q2R3bUJEOztBQUVEO0VjbGtCSztJZG9rQkQsc0NBQXNDO0djN21CMUM7Q2QrbUJDOztBQUVEO0VjM2xCUSxhQUFRO0VBdEJoQixrQkFDRTtFZG1uQkEsMEJjN2xCeUI7Q2Q4bEIxQjs7QUFFRDtFQUNFLG9CQUFvQjtDY3huQnRCOztBZDJuQkE7RWM1bEJRO0lBU0Qsa0JBQUE7SWRzbEJILGlCQUFpQjtHYzluQnJCO0NkZ29CQzs7QUFFRDtFY2xvQkEscUJBQ0U7RUFxQ1EsMEJBQWlCO0VBQ2xCLGFBQUE7Q2QrbEJSOztBQUVEO0VlaHJCQyxpQkFBQTtDZmtyQkE7O0FBRUQ7RWV0dkJNLGtCakJLSTtDRW12QlQ7O0FBRUQ7RUFDRSxpQkFBaUI7Q2Vqd0JuQjs7QWZvd0JBO0VlN3ZCTSxlTkNHO0VNQUgsOERWRHlCO0VVRTFCLHFCQUFBO0VmK3ZCSCx1QkFBdUI7Q2V4d0J6Qjs7QWYyd0JBO0VlcHdCTSxlTkVEO0VNREMsOERWRHlCO0VVRTFCLGdCQUFBO0Vmc3dCSCx1QkFBdUI7Q2Uvd0J6Qjs7QWZreEJBO0VlM3dCTSxlTkdEO0VNRkMsOERWRHlCO0VVRTFCLGtCQUFBO0VmNndCSCx1QkFBdUI7Q2V0eEJ6Qjs7QWZ5eEJBO0VlbHhCTSxlTklEO0VNSEMsOERWRHlCO0VVRTFCLG1CQUFBO0Vmb3hCSCx1QkFBdUI7Q2U3eEJ6Qjs7QWZneUJBO0VlenhCTSxlTktHO0VNSkgsOERWRHlCO0VVRTFCLG1CQUFBO0VmMnhCSCx1QkFBdUI7Q2VweUJ6Qjs7QWZ1eUJBO0VleHhCRyxlQUFBO0VmMHhCRCw4REFBOEQ7RWV6eUJoRSxnQkFpQkk7RUFqQkosdUJBa0JLO0NmMHhCSjs7QUFFRDs7RWU5eUJBLGlCQXVCSztDZjB4Qko7O0FBRUQ7O0VldnhCSSxpQlhwQkU7Q1cyQkg7O0FBbkNIOztFQWlDTSxvQkFBaUI7Q0FDbEI7O0FBbENMO0VBc0NJLHNHWEVTO0NKdXhCWjs7QUFFRDtFZXZ4Qkcsc0dBQUE7RWZ5eEJELDJCQUEyQjtDZW4wQjdCOztBZnMwQkE7RWV2eEJJLDBCWFBFO0VXUUYsbUJWN0NtQjtFVThDcEIsc0JBQUE7RWZ5eEJELHVCQUF1QjtDZTEwQnpCOztBZjYwQkE7RWV2eEJJLDBCTmhEYTtFTWlEZCxjQUFBO0VmeXhCRCxrQ0FBa0M7RWVoMUJwQyxvQkF5REs7Q2Z5eEJKOztBQUVEO0VBQ0UsZUFBZTtFZXIxQmpCLDhEQThETTtFQUNGLGdCQUFTO0NmeXhCWjs7QUFFRDtFQUNFLGFBQWE7RWUzMUJmLGdCQW9FTTtDQXBFTjs7QWYrMUJBO0VBQ0UsVUFBVTtFZ0JoMkJaLGNBQUE7RUFDRSxtQlpvQ0c7Q1lnRUo7O0FBakc0Qjs7RWhCbTJCM0IsMEJnQnAyQk07Q2hCcTJCUDs7QUFFRDtFQUNFLDBCS2oyQjZCO0NMazJCOUI7O0FBRUQ7RUFDRTtJZ0IvMkJGO01Ba0JVLGNBQVc7TUFDWCxpQ1prQkU7TVlqQkgsc0RBcEJUO01BdUJVLGtCQUFpQjtLaEIrMUJ0QjtJQUNEO01BQ0UsbUJBQW1CO0tBQ3BCO0lBQ0Q7TWdCNzFCNkIsZ0JBQVA7TUFDSywwQkFBRDtLbkIzQjFCO0lHMjNCQTtNQUNFLGtCZ0IvMUJpQjtNaEJnMkJqQixnQmdCcjBCSDtLaEJzMEJFO0dBQ0Y7Q0FDRjs7QUFFRDtFQUNFO0lBQ0U7TUFDRTtRQUNFLGNBQWM7T0FDZjtNSHY0Qkc7UW1CSFYsYUFBbUI7T0FnRFg7TUFXTDtRQTNESCxRQUFBO09BbURVO0tBQ0Q7R0FwRFQ7Q2hCbTVCQzs7QUFFRDtFQUNFO0lnQngxQjJCLGNBQVA7R25CM0RsQjtFR3M1QkY7SUFDRSxhZ0IxMUJhO0doQjIxQmQ7RUFDRDtJQUNFLFFnQnp6QkQ7R2hCMHpCQTtDQUNGOztBQUVEO0VBQ0U7SUFDRTtNZ0J0MUJLLGNBQUE7TUE3RVQsMkJBQW1CO01BZ0ZULGlEQUVEO0toQnUxQko7SUFDRDtNQUNFLG1CQUFtQjtNZ0IzNkJ6QixhQUFtQjtLQXVGYjtJQUNBO01BV0QsZ0JBQUE7S2hCNjBCQTtJZ0JoN0JMO01BMkZRLGtCQUFjO01BQ2QsZ0JBQWU7S0FDZjtHQUtEO0NoQm8xQk47O0FBRUQ7RWdCdjFCUyxhQUFBO0VoQnkxQlAsV0FBVztDQUNaOztBQUVEO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixpQkFBaUI7Q0FDbEI7O0FBRUQ7RUFDRSxXQUFXO0NBQ1oiLCJmaWxlIjoiYXRvbWljLWJ1bGxkb2cta3NzLXRoZW1lLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qQXRvbWljIEJ1bGxkb2cga3NzIHRoZW1lIHZlcnNpb24gMS4wLjAqL1xyXG5cclxuLy9HbG9iYWwgc2V0dGluZ3NcclxuQGltcG9ydCBcInNldHRpbmdzL2F0b21pYy1idWxsZG9nLXNldHRpbmdzXCI7XHJcblxyXG4vL2Z1bmN0aW9uc1xyXG5AaW1wb3J0IFwiZnVuY3Rpb25zL2VtXCI7XHJcbkBpbXBvcnQgXCJmdW5jdGlvbnMvbWFwLWRlZXAtZ2V0XCI7XHJcblxyXG4vL21peGluc1xyXG5AaW1wb3J0IFwibWl4aW5zL21lZGlhLXF1ZXJpZXNcIjtcclxuXHJcbi8vdmFyaWFibGVzXHJcbkBpbXBvcnQgXCJ2YXJpYWJsZXMvcm9vdC1jbGFzc2VzXCI7XHJcbkBpbXBvcnQgXCJ2YXJpYWJsZXMvYnJlYWtwb2ludHNcIjtcclxuQGltcG9ydCBcInZhcmlhYmxlcy9jb2xvcnNcIjtcclxuQGltcG9ydCBcInZhcmlhYmxlcy9jb250YWluZXItc2l6ZXNcIjtcclxuQGltcG9ydCBcInZhcmlhYmxlcy9mb250LWZhbWlsaWVzXCI7XHJcbkBpbXBvcnQgXCJ2YXJpYWJsZXMvZm9udC1zaXplc1wiO1xyXG5AaW1wb3J0IFwidmFyaWFibGVzL3NwYWNlcnNcIjtcclxuQGltcG9ydCBcInZhcmlhYmxlcy96LWluZGV4XCI7XHJcblxyXG4vL3ZlbmRvcnNcclxuQGltcG9ydCBcInZlbmRvcnMvbW9kZXJuLW5vcm1hbGl6ZVwiO1xyXG5cclxuLy9sYXlvdXRzXHJcbkBpbXBvcnQgXCJsYXlvdXRzL2tzcy1jb250YWluZXJcIjtcclxuXHJcbi8vYXRvbXNcclxuQGltcG9ydCBcImF0b21zL2tzcy1icmFuZFwiO1xyXG5AaW1wb3J0IFwiYXRvbXMva3NzLWJ0blwiO1xyXG5AaW1wb3J0IFwiYXRvbXMva3NzLWJ1cmdlclwiO1xyXG5AaW1wb3J0IFwiYXRvbXMva3NzLXR5cG9ncmFwaHlcIjtcclxuQGltcG9ydCBcImF0b21zL2tzcy1uby1zY3JvbGxcIjtcclxuXHJcbi8vbW9sZWN1bGVzXHJcbkBpbXBvcnQgXCJtb2xlY3VsZXMva3NzLW5hdmlnYXRpb25cIjtcclxuQGltcG9ydCBcIm1vbGVjdWxlcy9rc3Mtc2VhcmNoXCI7XHJcblxyXG4vL29yZ2FuaXNtc1xyXG5AaW1wb3J0IFwib3JnYW5pc21zL2tzcy1zaWRlYmFyXCI7XHJcbkBpbXBvcnQgXCJvcmdhbmlzbXMva3NzLXNlY3Rpb25cIjtcclxuQGltcG9ydCBcIm9yZ2FuaXNtcy9rc3MtbWFya2Rvd25cIjtcclxuXHJcbi8vdGVtcGxhdGVzXHJcbkBpbXBvcnQgXCJ0ZW1wbGF0ZXMva3NzLXBhZ2UtY29udGFpbmVyXCI7XHJcbiIsIi8qTWluIGFuZCBNYXggbWl4aW5zKi9cclxuQG1peGluIG1pbigkYnAsICRtYXg6IFwibnVsbFwiLCAkZGV2aWNlOiBcInNjcmVlblwiKSB7XHJcbiAgQGlmICRtYXggPT0gXCJudWxsXCIge1xyXG4gICAgQG1lZGlhIG9ubHkgI3skZGV2aWNlfSBhbmQgKG1pbi13aWR0aDogI3skYnB9KSB7XHJcbiAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG4gIH0gQGVsc2Uge1xyXG4gICAgQG1lZGlhIG9ubHkgI3skZGV2aWNlfSBhbmQgKG1pbi13aWR0aDogI3skYnB9KSBhbmQgKG1heC13aWR0aDogI3skbWF4fSkge1xyXG4gICAgICBAY29udGVudDtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBtYXgoJGJwLCAkbWluOiBcIm51bGxcIiwgJGRldmljZTogXCJzY3JlZW5cIikge1xyXG4gIEBpZiAkbWluID09IFwibnVsbFwiIHtcclxuICAgIEBtZWRpYSBvbmx5ICN7JGRldmljZX0gYW5kIChtYXgtd2lkdGg6ICN7JGJwfSkge1xyXG4gICAgICBAY29udGVudDtcclxuICAgIH1cclxuICB9IEBlbHNlIHtcclxuICAgIEBtZWRpYSBvbmx5ICN7JGRldmljZX0gYW5kIChtYXgtd2lkdGg6ICN7JGJwfSkgYW5kIChtaW4td2lkdGg6ICN7JG1pbn0pIHtcclxuICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIEltcG9ydCBmb250c1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnM6NDAwLDcwMCcpO1xyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFNhc3MgVmFyaWFibGVzXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4kZm9udC1mYW1pbHktcHJlZml4OiAtLWZvbnQtZmFtaWx5LTtcclxuJGZvbnQtZmFtaWxpZXM6IChcclxuICBwYXJhZ3JhcGg6IChcIk9wZW4gU2Fuc1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIEFyaWFsLCBzYW5zLXNlcmlmKSxcclxuICB0aXRsZTogKFwiT3BlbiBTYW5zXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIHNhbnMtc2VyaWYpLFxyXG4gIGhpZ2hsaWdodDogKFwiT3BlbiBTYW5zXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIHNhbnMtc2VyaWYpLFxyXG4pO1xyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFNldCBmdW5jdGlvblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQGZ1bmN0aW9uIGZvbnQtZmFtaWx5KCRmb250LWZhbWlseSwgJHRydWUtdmFsOmZhbHNlKSB7XHJcbiAgQGlmICR1c2UtY3NzLXZhciA9PSB0cnVlIHtcclxuICAgIEBpZiAkdHJ1ZS12YWwgPT0gdHJ1ZSB7XHJcbiAgICAgIEByZXR1cm4gbWFwLWdldCgkZm9udC1mYW1pbGllcywgJGZvbnQtZmFtaWx5KTsgLy9UcnVlIFZhbFxyXG4gICAgfSBAZWxzZSB7XHJcbiAgICAgIEByZXR1cm4gdmFyKCN7JGZvbnQtZmFtaWx5LXByZWZpeH0jeyRmb250LWZhbWlseX0pOyAvL0NTUyBWYXJcclxuICAgIH1cclxuICB9IEBlbHNlIHtcclxuICAgIEByZXR1cm4gbWFwLWdldCgkZm9udC1mYW1pbGllcywgJGZvbnQtZmFtaWx5KTsgLy9EaXNhYmxlZCBDU1MgVmFyXHJcbiAgfVxyXG59XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gU2V0IHJvb3QgdmFyaWFibGVzXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5AaWYgJHVzZS1jc3MtdmFyID09IHRydWUge1xyXG4gICN7JHJvb3QtZGVmYXVsdH0ge1xyXG4gICAgQGVhY2ggJG5hbWUsICRmb250LWZhbWlseSBpbiAkZm9udC1mYW1pbGllcyB7XHJcbiAgICAgICN7JGZvbnQtZmFtaWx5LXByZWZpeH0jeyRuYW1lfTogJGZvbnQtZmFtaWx5OyAvL05vdCB1c2luZyBlbSBhcyBub3QgYmVpbmcgdXNlIGluIG1lZGlhIHF1ZXJpZXNcclxuICAgIH1cclxuICB9XHJcbn0iLCIvKiEgbW9kZXJuLW5vcm1hbGl6ZSB8IE1JVCBMaWNlbnNlIHwgaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9tb2Rlcm4tbm9ybWFsaXplICovXHJcblxyXG4vKiBEb2N1bWVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIFVzZSBhIGJldHRlciBib3ggbW9kZWwgKG9waW5pb25hdGVkKS5cclxuICovXHJcblxyXG5odG1sIHtcclxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG4qLFxyXG4qOjpiZWZvcmUsXHJcbio6OmFmdGVyIHtcclxuXHRib3gtc2l6aW5nOiBpbmhlcml0O1xyXG59XHJcblxyXG4vKipcclxuICogVXNlIGEgbW9yZSByZWFkYWJsZSB0YWIgc2l6ZSAob3BpbmlvbmF0ZWQpLlxyXG4gKi9cclxuXHJcbjpyb290IHtcclxuXHQtbW96LXRhYi1zaXplOiA0O1xyXG5cdHRhYi1zaXplOiA0O1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbmh0bWwge1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjE1O1xyXG59XHJcblxyXG4vKiBTZWN0aW9uc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5ib2R5IHtcclxuXHRtYXJnaW46IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJbXByb3ZlIGNvbnNpc3RlbmN5IG9mIGRlZmF1bHQgZm9udHMgaW4gYWxsIGJyb3dzZXJzLiAoaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9tb2Rlcm4tbm9ybWFsaXplL2lzc3Vlcy8zKVxyXG4gKi9cclxuXHJcbmJvZHkge1xyXG5cdGZvbnQtZmFtaWx5OlxyXG5cdFx0LWFwcGxlLXN5c3RlbSxcclxuXHRcdEJsaW5rTWFjU3lzdGVtRm9udCxcclxuXHRcdCdTZWdvZSBVSScsXHJcblx0XHRSb2JvdG8sXHJcblx0XHRIZWx2ZXRpY2EsXHJcblx0XHRBcmlhbCxcclxuXHRcdHNhbnMtc2VyaWYsXHJcblx0XHQnQXBwbGUgQ29sb3IgRW1vamknLFxyXG5cdFx0J1NlZ29lIFVJIEVtb2ppJyxcclxuXHRcdCdTZWdvZSBVSSBTeW1ib2wnO1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxyXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmgxIHtcclxuXHRmb250LXNpemU6IDJlbTtcclxuXHRtYXJnaW46IDAuNjdlbSAwO1xyXG59XHJcblxyXG4vKiBHcm91cGluZyBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGhlaWdodCBpbiBGaXJlZm94LlxyXG4gKi9cclxuXHJcbmhyIHtcclxuXHRoZWlnaHQ6IDA7XHJcbn1cclxuXHJcbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuYWJiclt0aXRsZV0ge1xyXG5cdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuYixcclxuc3Ryb25nIHtcclxuXHRmb250LXdlaWdodDogYm9sZGVyO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gSW1wcm92ZSBjb25zaXN0ZW5jeSBvZiBkZWZhdWx0IGZvbnRzIGluIGFsbCBicm93c2Vycy4gKGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvbW9kZXJuLW5vcm1hbGl6ZS9pc3N1ZXMvMylcclxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbmNvZGUsXHJcbmtiZCxcclxuc2FtcCxcclxucHJlIHtcclxuXHRmb250LWZhbWlseTogU0ZNb25vLVJlZ3VsYXIsIENvbnNvbGFzLCAnTGliZXJhdGlvbiBNb25vJywgTWVubG8sIENvdXJpZXIsIG1vbm9zcGFjZTsgLyogMSAqL1xyXG5cdGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5zbWFsbCB7XHJcblx0Zm9udC1zaXplOiA4MCU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cclxuICogYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbnN1Yixcclxuc3VwIHtcclxuXHRmb250LXNpemU6IDc1JTtcclxuXHRsaW5lLWhlaWdodDogMDtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcblxyXG5zdWIge1xyXG5cdGJvdHRvbTogLTAuMjVlbTtcclxufVxyXG5cclxuc3VwIHtcclxuXHR0b3A6IC0wLjVlbTtcclxufVxyXG5cclxuLyogRm9ybXNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cclxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuaW5wdXQsXHJcbm9wdGdyb3VwLFxyXG5zZWxlY3QsXHJcbnRleHRhcmVhIHtcclxuXHRmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xyXG5cdGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXHJcblx0bWFyZ2luOiAwOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UgYW5kIEZpcmVmb3guXHJcbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cclxuICovXHJcblxyXG5idXR0b24sXHJcbnNlbGVjdCB7IC8qIDEgKi9cclxuXHR0ZXh0LXRyYW5zZm9ybTogbm9uZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5bdHlwZT0nYnV0dG9uJ10sXHJcblt0eXBlPSdyZXNldCddLFxyXG5bdHlwZT0nc3VibWl0J10ge1xyXG5cdC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICovXHJcblxyXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXHJcblt0eXBlPSdidXR0b24nXTo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9J3Jlc2V0J106Oi1tb3otZm9jdXMtaW5uZXIsXHJcblt0eXBlPSdzdWJtaXQnXTo6LW1vei1mb2N1cy1pbm5lciB7XHJcblx0Ym9yZGVyLXN0eWxlOiBub25lO1xyXG5cdHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXHJcbiAqL1xyXG5cclxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT0nYnV0dG9uJ106LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPSdyZXNldCddOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT0nc3VibWl0J106LW1vei1mb2N1c3Jpbmcge1xyXG5cdG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcclxufVxyXG5cclxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICovXHJcblxyXG5maWVsZHNldCB7XHJcblx0cGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxyXG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5sZWdlbmQge1xyXG5cdHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSBhbmQgRmlyZWZveC5cclxuICovXHJcblxyXG5wcm9ncmVzcyB7XHJcblx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcblxyXG4vKipcclxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxyXG4gKi9cclxuXHJcblt0eXBlPSdudW1iZXInXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcclxuW3R5cGU9J251bWJlciddOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuXHRoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cclxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXHJcbiAqL1xyXG5cclxuW3R5cGU9J3NlYXJjaCddIHtcclxuXHQtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xyXG5cdG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXHJcbiAqL1xyXG5cclxuW3R5cGU9J3NlYXJjaCddOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcclxuXHQtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXHJcbiAqL1xyXG5cclxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XHJcblx0LXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cclxuXHRmb250OiBpbmhlcml0OyAvKiAyICovXHJcbn1cclxuXHJcbi8qIEludGVyYWN0aXZlXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5zdW1tYXJ5IHtcclxuXHRkaXNwbGF5OiBsaXN0LWl0ZW07XHJcbn0iLCIvKkF0b21pYyBCdWxsZG9nIGtzcyB0aGVtZSB2ZXJzaW9uIDEuMC4wKi9cbi8qTWluIGFuZCBNYXggbWl4aW5zKi9cbkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2Fuczo0MDAsNzAwXCIpO1xuLyohIG1vZGVybi1ub3JtYWxpemUgfCBNSVQgTGljZW5zZSB8IGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvbW9kZXJuLW5vcm1hbGl6ZSAqL1xuLyogRG9jdW1lbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiBVc2UgYSBiZXR0ZXIgYm94IG1vZGVsIChvcGluaW9uYXRlZCkuXHJcbiAqL1xuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbi8qKlxyXG4gKiBVc2UgYSBtb3JlIHJlYWRhYmxlIHRhYiBzaXplIChvcGluaW9uYXRlZCkuXHJcbiAqL1xuOnJvb3Qge1xuICAtbW96LXRhYi1zaXplOiA0O1xuICB0YWItc2l6ZTogNDtcbn1cblxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cclxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG59XG5cbi8qIFNlY3Rpb25zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxyXG4gKiBJbXByb3ZlIGNvbnNpc3RlbmN5IG9mIGRlZmF1bHQgZm9udHMgaW4gYWxsIGJyb3dzZXJzLiAoaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9tb2Rlcm4tbm9ybWFsaXplL2lzc3Vlcy8zKVxyXG4gKi9cbmJvZHkge1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSxcciBCbGlua01hY1N5c3RlbUZvbnQsXHIgJ1NlZ29lIFVJJyxcciBSb2JvdG8sXHIgSGVsdmV0aWNhLFxyIEFyaWFsLFxyIHNhbnMtc2VyaWYsXHIgJ0FwcGxlIENvbG9yIEVtb2ppJyxcciAnU2Vnb2UgVUkgRW1vamknLFxyICdTZWdvZSBVSSBTeW1ib2wnO1xufVxuXG4vKipcclxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxyXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxyXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgaGVpZ2h0IGluIEZpcmVmb3guXHJcbiAqL1xuaHIge1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXHJcbiAqL1xuYWJiclt0aXRsZV0ge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG59XG5cbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxyXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcclxuICogMS4gSW1wcm92ZSBjb25zaXN0ZW5jeSBvZiBkZWZhdWx0IGZvbnRzIGluIGFsbCBicm93c2Vycy4gKGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvbW9kZXJuLW5vcm1hbGl6ZS9pc3N1ZXMvMylcclxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbmNvZGUsXG5rYmQsXG5zYW1wLFxucHJlIHtcbiAgZm9udC1mYW1pbHk6IFNGTW9uby1SZWd1bGFyLCBDb25zb2xhcywgJ0xpYmVyYXRpb24gTW9ubycsIE1lbmxvLCBDb3VyaWVyLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi9cbn1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxyXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cclxuICogYWxsIGJyb3dzZXJzLlxyXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEZvcm1zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cclxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovXG59XG5cbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UgYW5kIEZpcmVmb3guXHJcbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cclxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcclxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICovXG5idXR0b24sXG5bdHlwZT0nYnV0dG9uJ10sXG5bdHlwZT0ncmVzZXQnXSxcblt0eXBlPSdzdWJtaXQnXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT0nYnV0dG9uJ106Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT0ncmVzZXQnXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPSdzdWJtaXQnXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXHJcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cclxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT0nYnV0dG9uJ106LW1vei1mb2N1c3JpbmcsXG5bdHlwZT0ncmVzZXQnXTotbW96LWZvY3VzcmluZyxcblt0eXBlPSdzdWJtaXQnXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcclxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xubGVnZW5kIHtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lIGFuZCBGaXJlZm94LlxyXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcclxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxyXG4gKi9cblt0eXBlPSdudW1iZXInXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPSdudW1iZXInXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cclxuICovXG5bdHlwZT0nc2VhcmNoJ10ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqL1xufVxuXG4vKipcclxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxyXG4gKi9cblt0eXBlPSdzZWFyY2gnXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cclxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZVxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXHJcbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLmtzcy1jb250YWluZXIge1xuICBwYWRkaW5nLXJpZ2h0OiAxcmVtO1xuICBwYWRkaW5nLWxlZnQ6IDFyZW07XG59XG5cbi5rc3MtY29udGFpbmVyOm5vdCguaXMtZmx1aWQpIHtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzcuNWVtKSB7XG4gIC5rc3MtY29udGFpbmVyOm5vdCguaXMtZmx1aWQpIHtcbiAgICB3aWR0aDogNTcwcHg7XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1Ni4yNWVtKSB7XG4gIC5rc3MtY29udGFpbmVyOm5vdCguaXMtZmx1aWQpIHtcbiAgICB3aWR0aDogODYwcHg7XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NWVtKSB7XG4gIC5rc3MtY29udGFpbmVyOm5vdCguaXMtZmx1aWQpIHtcbiAgICB3aWR0aDogODIwcHg7XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMTIuNWVtKSB7XG4gIC5rc3MtY29udGFpbmVyOm5vdCguaXMtZmx1aWQpIHtcbiAgICB3aWR0aDogMTE1MHB4O1xuICB9XG59XG5cbi5rc3MtYnJhbmQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5rc3MtYnJhbmQgcCB7XG4gIGNvbG9yOiBoc2wodmFyKC0ta3NzQnJhbmRDb2xvckgpLCBjYWxjKHZhcigtLWtzc0JyYW5kQ29sb3JTKSAqIDElKSwgY2FsYyh2YXIoLS1rc3NCcmFuZENvbG9yTCkgKiAxJSkpO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTtcbn1cblxuLmtzcy1icmFuZCBpbWcge1xuICBoZWlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMS4yNXJlbTtcbn1cblxuLmtzcy1idG4ge1xuICBib3JkZXI6IDFweCBzb2xpZCAjNmM3NTdkO1xuICBjb2xvcjogIzZjNzU3ZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHBhZGRpbmc6IDAuMnJlbSAwLjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5rc3MtYnRuOmhvdmVyIHtcbiAgY29sb3I6ICM0OTUwNTc7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG4ua3NzLWJ1cmdlci1jb250YWluZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIHotaW5kZXg6IDIwO1xufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc1ZW0pIHtcbiAgLmtzcy1idXJnZXItY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5rc3MtYnVyZ2VyLWNvbnRhaW5lcjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci13aWR0aDogMCA4MDBweCAzMjBweCAwO1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IGhzbCh2YXIoLS1rc3NCcmFuZENvbG9ySCksIGNhbGModmFyKC0ta3NzQnJhbmRDb2xvclMpICogMSUpLCBjYWxjKHZhcigtLWtzc0JyYW5kQ29sb3JMKSAqIDElKSkgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAtMzIwcHg7XG59XG5cbmJ1dHRvbi5rc3MtYnVyZ2VyIHtcbiAgYm9yZGVyOiBub25lO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBoc2wodmFyKC0ta3NzQnJhbmRDb2xvckgpLCBjYWxjKHZhcigtLWtzc0JyYW5kQ29sb3JTKSAqIDElKSwgY2FsYyh2YXIoLS1rc3NCcmFuZENvbG9yTCkgKiAxJSkpO1xuICBkaXNwbGF5OiBmbGV4O1xuICBwYWRkaW5nOiAwLjVyZW0gMS4yNXJlbTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuYnV0dG9uLmtzcy1idXJnZXIgc3Bhbi5idXJnZXItaWNvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMjVweDtcbiAgaGVpZ2h0OiAyMHB4O1xuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCkgc2NhbGUoMSwgMSk7XG59XG5cbmJ1dHRvbi5rc3MtYnVyZ2VyIHNwYW4uYnVyZ2VyLWljb246YWZ0ZXIsIGJ1dHRvbi5rc3MtYnVyZ2VyIHNwYW4uYnVyZ2VyLWljb246YmVmb3JlLFxuYnV0dG9uLmtzcy1idXJnZXIgc3Bhbi5idXJnZXItaWNvbiBzcGFuIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMnB4O1xuICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwcHg7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cztcbn1cblxuYnV0dG9uLmtzcy1idXJnZXIgc3Bhbi5idXJnZXItaWNvbjphZnRlciwgYnV0dG9uLmtzcy1idXJnZXIgc3Bhbi5idXJnZXItaWNvbjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xufVxuXG5idXR0b24ua3NzLWJ1cmdlciBzcGFuLmJ1cmdlci1pY29uOmFmdGVyIHtcbiAgdG9wOiAwcHg7XG4gIG1hcmdpbi10b3A6IDBweDtcbn1cblxuYnV0dG9uLmtzcy1idXJnZXIgc3Bhbi5idXJnZXItaWNvbjpiZWZvcmUge1xuICBib3R0b206IDBweDtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xufVxuXG5idXR0b24ua3NzLWJ1cmdlciBzcGFuLmJ1cmdlci1pY29uIHNwYW4ge1xuICB0b3A6IDUwJTtcbn1cblxuYnV0dG9uLmtzcy1idXJnZXIuaXMtYWN0aXZlIHNwYW4uYnVyZ2VyLWljb246YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxMzVkZWcpIHRyYW5zbGF0ZSg3cHgsIC03cHgpO1xufVxuXG5idXR0b24ua3NzLWJ1cmdlci5pcy1hY3RpdmUgc3Bhbi5idXJnZXItaWNvbjpiZWZvcmUge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgyMjVkZWcpO1xuICBib3R0b206IDUwJTtcbiAgbWFyZ2luLWJvdHRvbTogLTJweDtcbn1cblxuYnV0dG9uLmtzcy1idXJnZXIuaXMtYWN0aXZlIHNwYW4uYnVyZ2VyLWljb24gc3BhbiB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDEzNWRlZyk7XG59XG5cbi5rc3MtaDEge1xuICBjb2xvcjogIzAwMDAwMDtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMi44MTI1cmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjI1cmVtO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4ua3NzLWgyIHtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDJyZW07XG4gIG1hcmdpbi1ib3R0b206IDAuMjVyZW07XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5rc3MtaDMge1xuICBjb2xvcjogIzAwMDAwMDtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjI1cmVtO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4ua3NzLWg0IHtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuMjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDAuMjVyZW07XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5rc3MtaDUge1xuICBjb2xvcjogIzAwMDAwMDtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS4xNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC4yNXJlbTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLmtzcy1oNiB7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjI1cmVtO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4ua3NzLWgxLFxuLmtzcy1oMiB7XG4gIG1hcmdpbi10b3A6IDlyZW07XG59XG5cbi5rc3MtaDMsXG4ua3NzLWg0IHtcbiAgbWFyZ2luLXRvcDogM3JlbTtcbn1cblxuLmtzcy1oNSxcbi5rc3MtaDYge1xuICBtYXJnaW4tdG9wOiAxLjI1cmVtO1xufVxuXG4ua3NzLWgxIC5rc3Mtc2VjdGlvbl9fcmVmIHtcbiAgY29sb3I6IGhzbCh2YXIoLS1rc3NCcmFuZENvbG9ySCksIGNhbGModmFyKC0ta3NzQnJhbmRDb2xvclMpICogMSUpLCBjYWxjKHZhcigtLWtzc0JyYW5kQ29sb3JMKSAqIDElKSk7XG59XG5cbi5rc3MtaXMtbm8tc2Nyb2xsIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmtzcy1uYXZpZ2F0aW9uIHVsLmtzcy1uYXYge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLmtzcy1uYXZpZ2F0aW9uIHVsLmtzcy1uYXYgdWwua3NzLXN1Ym5hdiB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgcGFkZGluZy1sZWZ0OiAwLjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5cbi5rc3MtbmF2aWdhdGlvbiB1bC5rc3MtbmF2IHVsLmtzcy1zdWJuYXYgLmtzcy1uYXYtbGluayB7XG4gIHBhZGRpbmc6IDAuMjVyZW07XG59XG5cbi5rc3MtbmF2aWdhdGlvbiB1bC5rc3MtbmF2IHVsLmtzcy1zdWJuYXYgbGkuaXMtZ3JhbmRjaGlsZCB7XG4gIHBhZGRpbmctbGVmdDogMC41cmVtO1xufVxuXG4ua3NzLW5hdmlnYXRpb24gLmtzcy1uYXYtbGluayB7XG4gIGNvbG9yOiAjNDk1MDU3O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5rc3MtbmF2aWdhdGlvbiAua3NzLW5hdi1saW5rOmhvdmVyLCAua3NzLW5hdmlnYXRpb24gLmtzcy1uYXYtbGluazpmb2N1cyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWY7XG4gIG91dGxpbmUtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3gtc2hhZG93OiAwIDAgMCB0cmFuc3BhcmVudDtcbn1cblxuLmtzcy1uYXZpZ2F0aW9uIC5rc3MtbmF2LWxpbmsuaXMtYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogaHNsKHZhcigtLWtzc0JyYW5kQ29sb3JIKSwgY2FsYyh2YXIoLS1rc3NCcmFuZENvbG9yUykgKiAxJSksIGNhbGMoKHZhcigtLWtzc0JyYW5kQ29sb3JMKSArIDIwKSAqIDElKSk7XG59XG5cbi5rc3MtbmF2aWdhdGlvbiAua3NzLW5hdi1saW5rLmlzLWFjdGl2ZTpob3ZlciwgLmtzcy1uYXZpZ2F0aW9uIC5rc3MtbmF2LWxpbmsuaXMtYWN0aXZlOmZvY3VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogaHNsKHZhcigtLWtzc0JyYW5kQ29sb3JIKSwgY2FsYyh2YXIoLS1rc3NCcmFuZENvbG9yUykgKiAxJSksIGNhbGMoKHZhcigtLWtzc0JyYW5kQ29sb3JMKSArIDIwKSAqIDElKSk7XG59XG5cbi5rc3MtbmF2aWdhdGlvbiAua3NzLW5hdi1saW5rIC5rc3MtbmF2X19yZWYge1xuICBmb250LXNpemU6IGNhbGMoMXJlbSAtIDAuMTVyZW0pO1xufVxuXG4ua3NzLXNlYXJjaCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxuLmtzcy1zZWFyY2ggI2tzcy1zZWFyY2hfX2lucHV0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNhZGI1YmQ7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbiAgY29sb3I6ICM0OTUwNTc7XG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzIGVhc2UtaW4tb3V0O1xuICBvdXRsaW5lOiBub25lO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmtzcy1zZWFyY2ggI2tzcy1zZWFyY2hfX2lucHV0OmhvdmVyLCAua3NzLXNlYXJjaCAja3NzLXNlYXJjaF9faW5wdXQ6Zm9jdXMge1xuICBib3JkZXItY29sb3I6ICM0OTUwNTc7XG59XG5cbi5rc3Mtc2VhcmNoICNrc3Mtc2VhcmNoX19saXN0IHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIG1heC1oZWlnaHQ6IDI1MHB4O1xuICBvdmVyZmxvdy15OiBhdXRvO1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNhZGI1YmQ7XG4gIGJvcmRlci10b3A6IDA7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5rc3Mtc2VhcmNoICNrc3Mtc2VhcmNoX19saXN0IGEge1xuICBjb2xvcjogIzQ5NTA1NztcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5rc3Mtc2VhcmNoICNrc3Mtc2VhcmNoX19saXN0IGE6aG92ZXIsIC5rc3Mtc2VhcmNoICNrc3Mtc2VhcmNoX19saXN0IGE6Zm9jdXMge1xuICBjb2xvcjogIzQ5NTA1NztcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5rc3Mtc2lkZWJhciB7XG4gIGhlaWdodDogMTAwdmg7XG4gIHBhZGRpbmc6IDFyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmOGY5ZmE7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTA7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5rc3Mtc2lkZWJhci5pcy1hY3RpdmUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDB2dztcbiAgcGFkZGluZzogM3JlbSAxcmVtO1xufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc1ZW0pIHtcbiAgLmtzcy1zaWRlYmFyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuICAua3NzLXNpZGViYXIuaXMtYWN0aXZlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiBhdXRvO1xuICAgIGxlZnQ6IGF1dG87XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMXJlbTtcbiAgfVxufVxuXG4ua3NzLXNlY3Rpb25fX3Blcm1hbGluazpob3ZlciwgLmtzcy1zZWN0aW9uX19wZXJtYWxpbms6Zm9jdXMge1xuICBjb2xvcjogaHNsKHZhcigtLWtzc0JyYW5kQ29sb3JIKSwgY2FsYyh2YXIoLS1rc3NCcmFuZENvbG9yUykgKiAxJSksIGNhbGModmFyKC0ta3NzQnJhbmRDb2xvckwpICogMSUpKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5rc3Mtc2VjdGlvbl9fc291cmNlIHtcbiAgY29sb3I6ICM2Yzc1N2Q7XG4gIGZvbnQtc2l6ZTogY2FsYygxcmVtIC0gMC4xcmVtKTtcbn1cblxuLmtzcy1zZWN0aW9uX19kZXNjcmlwdGlvbiB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5cbi5rc3Mtc2VjdGlvbl9fZGVzY3JpcHRpb24gcCB7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuXG4ua3NzLXNlY3Rpb25fX2Rlc2NyaXB0aW9uIGEge1xuICBjb2xvcjogaHNsKHZhcigtLWtzc0JyYW5kQ29sb3JIKSwgY2FsYyh2YXIoLS1rc3NCcmFuZENvbG9yUykgKiAxJSksIGNhbGModmFyKC0ta3NzQnJhbmRDb2xvckwpICogMSUpKTtcbn1cblxuLmtzcy1zZWN0aW9uX19kZXNjcmlwdGlvbiBhOmhvdmVyLCAua3NzLXNlY3Rpb25fX2Rlc2NyaXB0aW9uIGE6Zm9jdXMge1xuICBjb2xvcjogaHNsKHZhcigtLWtzc0JyYW5kQ29sb3JIKSwgY2FsYyh2YXIoLS1rc3NCcmFuZENvbG9yUykgKiAxJSksIGNhbGModmFyKC0ta3NzQnJhbmRDb2xvckwpICogMSUpKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbi5rc3Mtc2VjdGlvbl9fZGVzY3JpcHRpb24gY29kZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkZWUyZTY7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgcGFkZGluZy1sZWZ0OiAwLjI1cmVtO1xuICBwYWRkaW5nLXJpZ2h0OiAwLjI1cmVtO1xufVxuXG4ua3NzLXNlY3Rpb25fX2Rlc2NyaXB0aW9uIGJsb2NrcXVvdGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xuICBwYWRkaW5nOiAxcmVtO1xuICBib3JkZXItbGVmdDogMC41cmVtIHNvbGlkICNkZWUyZTY7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG59XG5cbi5rc3Mtc2VjdGlvbl9fZGVzY3JpcHRpb24gLmtzcy1pZnJhbWUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA1MDBweDtcbn1cblxuLmtzcy1zZWN0aW9uX19leGFtcGxlLWNvbnRhaW5lciB7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm9yZGVyOiAzcHggc29saWQgI2RlZTJlNjtcbn1cblxuLmtzcy1zZWN0aW9uX19leGFtcGxlLWNvbnRhaW5lciBwcmVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdIHtcbiAgbWFyZ2luOiAwO1xufVxuXG4ua3NzLXNlY3Rpb25fX2V4YW1wbGUtY29udGFpbmVyIGNvZGVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdLFxuLmtzcy1zZWN0aW9uX19leGFtcGxlLWNvbnRhaW5lciBwcmVbY2xhc3MqPVwibGFuZ3VhZ2UtXCJdIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RlZTJlNjtcbiAgLyogV29ya3MgaW4gU2FmYXJpICovXG59XG5cbi5rc3Mtc2VjdGlvbl9fZXhhbXBsZS1jb250YWluZXIgY29kZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0gOjotbW96LXNlbGVjdGlvbixcbi5rc3Mtc2VjdGlvbl9fZXhhbXBsZS1jb250YWluZXIgcHJlW2NsYXNzKj1cImxhbmd1YWdlLVwiXSA6Oi1tb3otc2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogaHNsKHZhcigtLWtzc0JyYW5kQ29sb3JIKSwgY2FsYyh2YXIoLS1rc3NCcmFuZENvbG9yUykgKiAxJSksIGNhbGModmFyKC0ta3NzQnJhbmRDb2xvckwpICogMSUpKTtcbiAgY29sb3I6ICMwMDAwMDA7XG59XG5cbi5rc3Mtc2VjdGlvbl9fZXhhbXBsZS1jb250YWluZXIgY29kZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0gOjpzZWxlY3Rpb24sXG4ua3NzLXNlY3Rpb25fX2V4YW1wbGUtY29udGFpbmVyIHByZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0gOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBoc2wodmFyKC0ta3NzQnJhbmRDb2xvckgpLCBjYWxjKHZhcigtLWtzc0JyYW5kQ29sb3JTKSAqIDElKSwgY2FsYyh2YXIoLS1rc3NCcmFuZENvbG9yTCkgKiAxJSkpO1xuICBjb2xvcjogIzAwMDAwMDtcbn1cblxuLmtzcy1zZWN0aW9uX19leGFtcGxlLWNvbnRhaW5lciAua3NzLXNlY3Rpb25fX2V4YW1wbGVzIHtcbiAgcGFkZGluZzogMXJlbTtcbiAgb3ZlcmZsb3cteDogYXV0bztcbn1cblxuLmtzcy1zZWN0aW9uX19leGFtcGxlLWNvbnRhaW5lciAua3NzLXNlY3Rpb25fX2V4YW1wbGVzIC5rc3MtbW9kaWZpZXJzX19oZWFkaW5nIHtcbiAgZm9udC1zaXplOiAxLjVyZW07XG59XG5cbi5rc3Mtc2VjdGlvbl9fZXhhbXBsZS1jb250YWluZXIgLmtzcy1zZWN0aW9uX19leGFtcGxlcyBjb2RlLmtzcy1tb2RpZmllcnNfX25hbWUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGVlMmU2O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHBhZGRpbmctbGVmdDogMC4yNXJlbTtcbiAgcGFkZGluZy1yaWdodDogMC4yNXJlbTtcbiAgbWFyZ2luLXRvcDogMS41cmVtO1xufVxuXG4ua3NzLXNlY3Rpb25fX2V4YW1wbGUtY29udGFpbmVyIC5rc3Mtc2VjdGlvbl9fZXhhbXBsZXMgLmtzcy1tb2RpZmllcnNfX2V4YW1wbGUge1xuICBtYXJnaW4tdG9wOiAxcmVtO1xuICBtYXJnaW4tYm90dG9tOiAzcmVtO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5rc3Mtc2VjdGlvbl9fZXhhbXBsZS1jb250YWluZXIgLmtzcy1zZWN0aW9uX19leGFtcGxlcyAua3NzLW1vZGlmaWVyc19fZXhhbXBsZTpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmtzcy1zZWN0aW9uX19leGFtcGxlLWNvbnRhaW5lciAua3NzLXNlY3Rpb25fX2V4YW1wbGVzIC5rc3MtYm94IHtcbiAgYmFja2dyb3VuZDogaHNsKHZhcigtLWtzc0JyYW5kQ29sb3JIKSwgY2FsYyh2YXIoLS1rc3NCcmFuZENvbG9yUykgKiAxJSksIGNhbGModmFyKC0ta3NzQnJhbmRDb2xvckwpICogMSUpKTtcbiAgY29sb3I6IHdoaXRlO1xuICBwYWRkaW5nOiAxcmVtO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4ja3NzLW1hcC1jb2xvcnMgLmtzcy1jb2xvci1pdGVtIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC1nYXA6IDFyZW07XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG4gIHBhZGRpbmc6IDFyZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkICNDQ0NDQ0M7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI1cHgpIHtcbiAgI2tzcy1tYXAtY29sb3JzIC5rc3MtY29sb3ItaXRlbSB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgMWZyKTtcbiAgfVxufVxuXG4ja3NzLW1hcC1jb2xvcnMgLmtzcy1jb2xvci1pdGVtIC5rc3MtY29sb3ItaXRlbS1jaGlsZCB7XG4gIHBhZGRpbmc6IDRweDtcbiAgcGFkZGluZy10b3A6IDgwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNDQ0NDQ0M7XG59XG5cbiNrc3MtbWFwLWNvbG9ycyAua3NzLWNvbG9yLWl0ZW0gLmtzcy1jb2xvci1pdGVtLWNoaWxkOmZpcnN0LWNoaWxkIHtcbiAgZ3JpZC1jb2x1bW46IHNwYW4gMjtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjVweCkge1xuICAja3NzLW1hcC1jb2xvcnMgLmtzcy1jb2xvci1pdGVtIC5rc3MtY29sb3ItaXRlbS1jaGlsZDpmaXJzdC1jaGlsZCB7XG4gICAgZ3JpZC1jb2x1bW46IGF1dG87XG4gICAgZ3JpZC1yb3c6IHNwYW4gMjtcbiAgfVxufVxuXG4ja3NzLW1hcC1jb2xvcnMgLmtzcy1jb2xvci1pdGVtIC5rc3MtY29sb3ItaXRlbS1jaGlsZCAua3NzLWNvbG9yLWl0ZW0tbGVnZW5kIHtcbiAgcGFkZGluZzogMC41cmVtIDFyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuI2tzcy1tYXAtY29sb3JzIC5rc3MtY29sb3ItaXRlbSAua3NzLWNvbG9yLWl0ZW0tY2hpbGQgLmtzcy1jb2xvci1pdGVtLWxlZ2VuZCBwOm50aC1sYXN0LWNoaWxkKDEpIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuI2tzcy1tYXAtY29sb3JzIC5rc3MtY29sb3ItaXRlbSAua3NzLWNvbG9yLWl0ZW0tY2hpbGQgLmtzcy1jb2xvci1pdGVtLWxlZ2VuZCBwOmZpcnN0LWNoaWxkIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5rc3MtbWFya2Rvd24ge1xuICBtYXJnaW4tdG9wOiA5cmVtO1xufVxuXG4ua3NzLW1hcmtkb3duIGgxIHtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDIuODEyNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC4yNXJlbTtcbn1cblxuLmtzcy1tYXJrZG93biBoMiB7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAycmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjI1cmVtO1xufVxuXG4ua3NzLW1hcmtkb3duIGgzIHtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC4yNXJlbTtcbn1cblxuLmtzcy1tYXJrZG93biBoNCB7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBmb250LWZhbWlseTogXCJPcGVuIFNhbnNcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjI1cmVtO1xufVxuXG4ua3NzLW1hcmtkb3duIGg1IHtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuMTVyZW07XG4gIG1hcmdpbi1ib3R0b206IDAuMjVyZW07XG59XG5cbi5rc3MtbWFya2Rvd24gaDYge1xuICBjb2xvcjogIzAwMDAwMDtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC4yNXJlbTtcbn1cblxuLmtzcy1tYXJrZG93biBoMSxcbi5rc3MtbWFya2Rvd24gaDIge1xuICBtYXJnaW4tdG9wOiA5cmVtO1xufVxuXG4ua3NzLW1hcmtkb3duIGgzLFxuLmtzcy1tYXJrZG93biBoNCB7XG4gIG1hcmdpbi10b3A6IDNyZW07XG59XG5cbi5rc3MtbWFya2Rvd24gaDUsXG4ua3NzLW1hcmtkb3duIGg2IHtcbiAgbWFyZ2luLXRvcDogMS4yNXJlbTtcbn1cblxuLmtzcy1tYXJrZG93biBhIHtcbiAgY29sb3I6IGhzbCh2YXIoLS1rc3NCcmFuZENvbG9ySCksIGNhbGModmFyKC0ta3NzQnJhbmRDb2xvclMpICogMSUpLCBjYWxjKHZhcigtLWtzc0JyYW5kQ29sb3JMKSAqIDElKSk7XG59XG5cbi5rc3MtbWFya2Rvd24gYTpob3ZlciwgLmtzcy1tYXJrZG93biBhOmZvY3VzIHtcbiAgY29sb3I6IGhzbCh2YXIoLS1rc3NCcmFuZENvbG9ySCksIGNhbGModmFyKC0ta3NzQnJhbmRDb2xvclMpICogMSUpLCBjYWxjKHZhcigtLWtzc0JyYW5kQ29sb3JMKSAqIDElKSk7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG4ua3NzLW1hcmtkb3duIGNvZGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGVlMmU2O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHBhZGRpbmctbGVmdDogMC4yNXJlbTtcbiAgcGFkZGluZy1yaWdodDogMC4yNXJlbTtcbn1cblxuLmtzcy1tYXJrZG93biBibG9ja3F1b3RlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcbiAgcGFkZGluZzogMXJlbTtcbiAgYm9yZGVyLWxlZnQ6IDAuNXJlbSBzb2xpZCAjZGVlMmU2O1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG4ua3NzLW1hcmtkb3duIHAge1xuICBjb2xvcjogIzAwMDAwMDtcbiAgZm9udC1mYW1pbHk6IFwiT3BlbiBTYW5zXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbn1cblxuLmtzcy1tYXJrZG93biBpbWcge1xuICBoZWlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuLmtzcy1tYXJrZG93biBwcmUge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDFyZW07XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuLmtzcy1tYXJrZG93biBwcmUgY29kZSxcbi5rc3MtbWFya2Rvd24gcHJlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RlZTJlNjtcbn1cblxuLmtzcy1wYWdlLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG59XG5cbkBzdXBwb3J0cyAoZGlzcGxheTogZ3JpZCkge1xuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc1ZW0pIHtcbiAgICAua3NzLXBhZ2UtY29udGFpbmVyOm5vdCgua3NzLWlzLWZ1bGwtd2lkdGgpIHtcbiAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDMyMHB4IDFmcjtcbiAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwic2lkZWJhciBtYWluXCJcciBcInNpZGViYXIgZm9vdGVyXCI7XG4gICAgICBncmlkLWdhcDogMS4yNXJlbTtcbiAgICB9XG4gICAgLmtzcy1wYWdlLWNvbnRhaW5lcjpub3QoLmtzcy1pcy1mdWxsLXdpZHRoKSAua3NzLXNpZGViYXIge1xuICAgICAgZ3JpZC1hcmVhOiBzaWRlYmFyO1xuICAgIH1cbiAgICAua3NzLXBhZ2UtY29udGFpbmVyOm5vdCgua3NzLWlzLWZ1bGwtd2lkdGgpIC5rc3MtbWFpbiB7XG4gICAgICBncmlkLWFyZWE6IG1haW47XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgIH1cbiAgICAua3NzLXBhZ2UtY29udGFpbmVyOm5vdCgua3NzLWlzLWZ1bGwtd2lkdGgpIC5rc3MtZm9vdGVyIHtcbiAgICAgIGdyaWQtYXJlYTogZm9vdGVyO1xuICAgICAgYWxpZ24tc2VsZjogZW5kO1xuICAgIH1cbiAgfVxufVxuXG5Ac3VwcG9ydHMgbm90IChkaXNwbGF5OiBncmlkKSB7XG4gIEBzdXBwb3J0cyAoZGlzcGxheTogZmxleCkge1xuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzVlbSkge1xuICAgICAgLmtzcy1wYWdlLWNvbnRhaW5lcjpub3QoLmtzcy1pcy1mdWxsLXdpZHRoKSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICB9XG4gICAgICAua3NzLXBhZ2UtY29udGFpbmVyOm5vdCgua3NzLWlzLWZ1bGwtd2lkdGgpIC5rc3Mtc2lkZWJhciB7XG4gICAgICAgIHdpZHRoOiAzMjBweDtcbiAgICAgIH1cbiAgICAgIC5rc3MtcGFnZS1jb250YWluZXI6bm90KC5rc3MtaXMtZnVsbC13aWR0aCkgLmtzcy1tYWluIHtcbiAgICAgICAgZmxleDogMTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAoLW1zLWhpZ2gtY29udHJhc3Q6IGFjdGl2ZSkgYW5kIChtaW4td2lkdGg6IDc1ZW0pLCBvbmx5IHNjcmVlbiBhbmQgKC1tcy1oaWdoLWNvbnRyYXN0OiBub25lKSBhbmQgKG1pbi13aWR0aDogNzVlbSkge1xuICAua3NzLXBhZ2UtY29udGFpbmVyOm5vdCgua3NzLWlzLWZ1bGwtd2lkdGgpIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG4gIC5rc3MtcGFnZS1jb250YWluZXI6bm90KC5rc3MtaXMtZnVsbC13aWR0aCkgLmtzcy1zaWRlYmFyIHtcbiAgICB3aWR0aDogMzIwcHg7XG4gIH1cbiAgLmtzcy1wYWdlLWNvbnRhaW5lcjpub3QoLmtzcy1pcy1mdWxsLXdpZHRoKSAua3NzLW1haW4ge1xuICAgIGZsZXg6IDE7XG4gIH1cbn1cblxuQHN1cHBvcnRzIChkaXNwbGF5OiBncmlkKSB7XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzVlbSkge1xuICAgIC5rc3MtcGFnZS1jb250YWluZXIua3NzLWlzLWZ1bGwtd2lkdGgge1xuICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogXCJtYWluXCJcciBcInNpZGViYXJcIlxyIFwiZm9vdGVyXCI7XG4gICAgfVxuICAgIC5rc3MtcGFnZS1jb250YWluZXIua3NzLWlzLWZ1bGwtd2lkdGggLmtzcy1zaWRlYmFyIHtcbiAgICAgIGdyaWQtYXJlYTogc2lkZWJhcjtcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICB9XG4gICAgLmtzcy1wYWdlLWNvbnRhaW5lci5rc3MtaXMtZnVsbC13aWR0aCAua3NzLW1haW4ge1xuICAgICAgZ3JpZC1hcmVhOiBtYWluO1xuICAgIH1cbiAgICAua3NzLXBhZ2UtY29udGFpbmVyLmtzcy1pcy1mdWxsLXdpZHRoIC5rc3MtZm9vdGVyIHtcbiAgICAgIGdyaWQtYXJlYTogZm9vdGVyO1xuICAgICAgYWxpZ24tc2VsZjogZW5kO1xuICAgIH1cbiAgfVxufVxuXG4ua3NzLXBhZ2UtY29udGFpbmVyLmtzcy1pcy1mdWxsLXdpZHRoIC5rc3MtY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMHZ3O1xuICBwYWRkaW5nOiAwO1xufVxuXG4ua3NzLXBhZ2UtY29udGFpbmVyLmtzcy1pcy1mdWxsLXdpZHRoIC5rc3MtY29udGFpbmVyIC5rc3Mtc2VjdGlvbl9fZXhhbXBsZS1jb250YWluZXIge1xuICBib3JkZXItbGVmdDogMDtcbiAgYm9yZGVyLXJpZ2h0OiAwO1xuICBib3JkZXItcmFkaXVzOiAwO1xufVxuXG4ua3NzLXBhZ2UtY29udGFpbmVyLmtzcy1pcy1mdWxsLXdpZHRoIC5rc3MtY29udGFpbmVyIC5rc3Mtc2VjdGlvbl9fZXhhbXBsZS1jb250YWluZXIgLmtzcy1zZWN0aW9uX19leGFtcGxlcyB7XG4gIHBhZGRpbmc6IDA7XG59XG4iLCIua3NzLWNvbnRhaW5lciB7XHJcbiAgcGFkZGluZy1yaWdodDogMXJlbTtcclxuICBwYWRkaW5nLWxlZnQ6IDFyZW07XHJcblxyXG4gICY6bm90KC5pcy1mbHVpZCkge1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcblxyXG4gICAgQGVhY2ggJGJwLCAkY29udGFpbmVyLXNpemUgaW4gJGNvbnRhaW5lci1zaXplcyB7XHJcbiAgICAgIEBpbmNsdWRlIG1pbigje2JwKCN7JGJwfSl9KSB7XHJcbiAgICAgICAgd2lkdGg6IGNvbnRhaW5lcigjeyRicH0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFNhc3MgVmFyaWFibGVzXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4kY29udGFpbmVyLXNpemUtcHJlZml4OiAtLWNvbnRhaW5lci1zaXplLTtcclxuJGNvbnRhaW5lci1zaXplczogKFxyXG4gIHNtOiBtYXAtZ2V0KCRicmVha3BvaW50cywgc20pIC0gMzBweCxcclxuICBtZDogbWFwLWdldCgkYnJlYWtwb2ludHMsIG1kKSAtIDQwcHgsXHJcbiAgbGc6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCBsZykgLSAyNTBweCAtIDEzMHB4LFxyXG4gIHhsOiBtYXAtZ2V0KCRicmVha3BvaW50cywgeGwpIC0gMjUwcHggLSA0MDBweFxyXG4pO1xyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFNldCBjb250YWluZXIgZnVuY3Rpb25cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkBmdW5jdGlvbiBjb250YWluZXIoJGNvbnRhaW5lci1zaXplLCAkdHJ1ZS12YWw6ZmFsc2UpIHtcclxuICBAaWYgJHVzZS1jc3MtdmFyID09IHRydWUge1xyXG4gICAgQGlmICR0cnVlLXZhbCA9PSB0cnVlIHtcclxuICAgICAgQHJldHVybiBtYXAtZ2V0KCRjb250YWluZXItc2l6ZXMsICRjb250YWluZXItc2l6ZSk7IC8vVHJ1ZSBWYWxcclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICBAcmV0dXJuIHZhcigjeyRjb250YWluZXItc2l6ZS1wcmVmaXh9I3skY29udGFpbmVyLXNpemV9KTsgLy9DU1MgVmFyXHJcbiAgICB9XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAcmV0dXJuIG1hcC1nZXQoJGNvbnRhaW5lci1zaXplcywgJGNvbnRhaW5lci1zaXplKTsgLy9EaXNhYmxlZCBDU1MgVmFyXHJcbiAgfVxyXG59XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gU2V0IHJvb3QgdmFyaWFibGVzXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5AaWYgJHVzZS1jc3MtdmFyID09IHRydWUge1xyXG4gICN7JHJvb3QtZGVmYXVsdH0ge1xyXG4gICAgQGVhY2ggJG5hbWUsICRjb250YWluZXItc2l6ZSBpbiAkY29udGFpbmVyLXNpemVzIHtcclxuICAgICAgI3skY29udGFpbmVyLXNpemUtcHJlZml4fSN7JG5hbWV9OiAkY29udGFpbmVyLXNpemU7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLmtzcy1icmFuZCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICBwIHtcclxuICAgIGNvbG9yOiBjb2xvcihwcmltYXJ5KTtcclxuICAgIGZvbnQtc2l6ZTogZm9udC1zaXplKDMpO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMTtcclxuICAgIG1hcmdpbi1ib3R0b206IHNwYWNlcig0KTtcclxuICB9XHJcblxyXG4gIGltZyB7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW4tYm90dG9tOiBzcGFjZXIoNCk7XHJcbiAgfVxyXG59XHJcbiIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBTYXNzIFZhcmlhYmxlc1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuJGNvbG9yLXByZWZpeDogLS1jb2xvci07XHJcbiRjb2xvci1ncmF5LXByZWZpeDogLS1jb2xvci1ncmF5LTtcclxuJGNvbG9yLXRoZW1lczogKFxyXG4gIHByaW1hcnk6IChcclxuICAgIGJhc2U6XHJcbiAgICAgIGhzbChcclxuICAgICAgICB2YXIoLS1rc3NCcmFuZENvbG9ySCksXHJcbiAgICAgICAgY2FsYyh2YXIoLS1rc3NCcmFuZENvbG9yUykgKiAxJSksXHJcbiAgICAgICAgY2FsYyh2YXIoLS1rc3NCcmFuZENvbG9yTCkgKiAxJSlcclxuICAgICAgKSxcclxuICAgIGRhcms6XHJcbiAgICAgIGhzbChcclxuICAgICAgICB2YXIoLS1rc3NCcmFuZENvbG9ySCksXHJcbiAgICAgICAgY2FsYyh2YXIoLS1rc3NCcmFuZENvbG9yUykgKiAxJSksXHJcbiAgICAgICAgY2FsYygodmFyKC0ta3NzQnJhbmRDb2xvckwpIC0gMTUpICogMSUpXHJcbiAgICAgICksXHJcbiAgICBsaWdodDpcclxuICAgICAgaHNsKFxyXG4gICAgICAgIHZhcigtLWtzc0JyYW5kQ29sb3JIKSxcclxuICAgICAgICBjYWxjKHZhcigtLWtzc0JyYW5kQ29sb3JTKSAqIDElKSxcclxuICAgICAgICBjYWxjKCh2YXIoLS1rc3NCcmFuZENvbG9yTCkgKyAyMCkgKiAxJSlcclxuICAgICAgKSxcclxuICAgIHRyYW5zcGFyZW50OlxyXG4gICAgICBoc2xhKFxyXG4gICAgICAgIHZhcigtLWtzc0JyYW5kQ29sb3JIKSxcclxuICAgICAgICBjYWxjKHZhcigtLWtzc0JyYW5kQ29sb3JTKSAqIDElKSxcclxuICAgICAgICBjYWxjKCh2YXIoLS1rc3NCcmFuZENvbG9yTCkgKyAyMCkgKiAxJSksXHJcbiAgICAgICAgMC41XHJcbiAgICAgICksXHJcbiAgICBjb250cmFzdDogaHNsKDAsIDAlLCAxMDAlKVxyXG4gIClcclxuKTtcclxuXHJcbiRncmF5LXRoZW1lczogKFxyXG4gIDA6ICNmZmZmZmYsXHJcbiAgMTA6ICNmOGY5ZmEsXHJcbiAgMjA6ICNlOWVjZWYsXHJcbiAgMzA6ICNkZWUyZTYsXHJcbiAgNDA6ICNjZWQ0ZGEsXHJcbiAgNTA6ICNhZGI1YmQsXHJcbiAgNjA6ICM2Yzc1N2QsXHJcbiAgNzA6ICM0OTUwNTcsXHJcbiAgODA6ICMzNDNhNDAsXHJcbiAgOTA6ICMyMTI1MjksXHJcbiAgMTAwOiAjMDAwMDAwXHJcbik7XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gU2V0IGNvbG9yIGZ1bmN0aW9uXHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyByZXRyaWV2ZSBjb2xvciBmcm9tIG1hcCB3aXRoIFNhc3MgaWUuIGBjb2xvcihwcmltYXJ5LCBiYXNlKWBcclxuQGZ1bmN0aW9uIGNvbG9yKCRjb2xvci1uYW1lLCAkY29sb3ItdmFyaWFudDogbnVsbCwgJHRydWUtdmFsOiBmYWxzZSkge1xyXG4gIC8vIGlmIHdlIGVuYWJsZSBjc3MgdmFyXHJcbiAgQGlmICR1c2UtY3NzLXZhciA9PSB0cnVlIHtcclxuICAgIC8vIHdlIG5lZWQgdG8gcmV0dXJuIHRoZSBjb2xvciB2YWx1ZVxyXG4gICAgQGlmICR0cnVlLXZhbCA9PSB0cnVlIHtcclxuICAgICAgLy8gY29sb3IgdmFyaWFudCBpcyBvcHRpb25hbFxyXG4gICAgICBAaWYgKCRjb2xvci12YXJpYW50ICE9IG51bGwpIHtcclxuICAgICAgICAvLyBtYXAgaW5jZXB0aW9uLCBuZWVkIHR3byBkZWVwXHJcbiAgICAgICAgQHJldHVybiBtYXAtZ2V0KG1hcC1nZXQoJGNvbG9yLXRoZW1lcywgJGNvbG9yLW5hbWUpLCAkY29sb3ItdmFyaWFudCk7XHJcbiAgICAgIH0gQGVsc2Uge1xyXG4gICAgICAgIC8vIERlZmF1bHQgY29sb3JcclxuICAgICAgICBAcmV0dXJuIG1hcC1nZXQobWFwLWdldCgkY29sb3ItdGhlbWVzLCAkY29sb3ItbmFtZSksIGJhc2UpO1xyXG4gICAgICB9IC8vIGlmIHdlJ3JlIG9ubHkgcmV0dXJuaW5nIHRoZSBDU1M0IHZhcmlhYmxlXHJcbiAgICB9IEBlbHNlIHtcclxuICAgICAgLy8gY29sb3IgdmFyaWFudCBpcyBvcHRpb25hbFxyXG4gICAgICBAaWYgKCRjb2xvci12YXJpYW50ICE9IG51bGwpIHtcclxuICAgICAgICAvLyBtYXAgaW5jZXB0aW9uLCBuZWVkIHR3byBuYW1lc1xyXG4gICAgICAgIEByZXR1cm4gdmFyKCN7JGNvbG9yLXByZWZpeH0jeyRjb2xvci1uYW1lfS0jeyRjb2xvci12YXJpYW50fSk7XHJcbiAgICAgIH0gQGVsc2Uge1xyXG4gICAgICAgIC8vIERlZmF1bHQgY29sb3IsIG9uZSBuYW1lXHJcbiAgICAgICAgQHJldHVybiB2YXIoI3skY29sb3ItcHJlZml4fSN7JGNvbG9yLW5hbWV9LWJhc2UpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSBAZWxzZSB7XHJcbiAgICAvLyBjb2xvciB2YXJpYW50IGlzIG9wdGlvbmFsXHJcbiAgICBAaWYgKCRjb2xvci12YXJpYW50ICE9IG51bGwpIHtcclxuICAgICAgLy8gbWFwIGluY2VwdGlvbiwgbmVlZCB0d28gZGVlcFxyXG4gICAgICBAcmV0dXJuIG1hcC1nZXQobWFwLWdldCgkY29sb3ItdGhlbWVzLCAkY29sb3ItbmFtZSksICRjb2xvci12YXJpYW50KTtcclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICAvLyBEZWZhdWx0IGNvbG9yXHJcbiAgICAgIEByZXR1cm4gbWFwLWdldChtYXAtZ2V0KCRjb2xvci10aGVtZXMsICRjb2xvci1uYW1lKSwgYmFzZSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbkBmdW5jdGlvbiBjb2xvci1ncmF5KCRncmF5LXRoZW1lLCAkdHJ1ZS12YWw6IGZhbHNlKSB7XHJcbiAgQGlmICR1c2UtY3NzLXZhciA9PSB0cnVlIHtcclxuICAgIEBpZiAkdHJ1ZS12YWwgPT0gdHJ1ZSB7XHJcbiAgICAgIEByZXR1cm4gbWFwLWdldCgkZ3JheS10aGVtZXMsICRncmF5LXRoZW1lKTsgLy8gVHJ1ZSBWYWxcclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICBAcmV0dXJuIHZhcigjeyRjb2xvci1ncmF5LXByZWZpeH0jeyRncmF5LXRoZW1lfSk7XHJcbiAgICAgIC8vIENTUyBWYXJcclxuICAgIH1cclxuICB9IEBlbHNlIHtcclxuICAgIEByZXR1cm4gbWFwLWdldCgkZ3JheS10aGVtZXMsICRncmF5LXRoZW1lKTsgLy8gRGlzYWJsZWQgQ1NTIFZhclxyXG4gIH1cclxufVxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFNldCByb290IHZhcmlhYmxlc1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQGlmICR1c2UtY3NzLXZhciA9PSB0cnVlIHtcclxuICAjeyRyb290LWRlZmF1bHR9IHtcclxuICAgIEBlYWNoICRuYW1lLCAkY29sb3IgaW4gJGNvbG9yLXRoZW1lcyB7XHJcbiAgICAgIEBpZiB0eXBlLW9mKCRjb2xvcikgPT0gXCJtYXBcIiB7XHJcbiAgICAgICAgQGVhY2ggJHN1Ym5hbWUsICRzdWJjb2xvciBpbiAkY29sb3Ige1xyXG4gICAgICAgICAgI3skY29sb3ItcHJlZml4fSN7JG5hbWV9LSN7JHN1Ym5hbWV9OiAkc3ViY29sb3I7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IEBlbHNlIGlmIHR5cGUtb2YoJGNvbG9yKSA9PSBcImNvbG9yXCIge1xyXG4gICAgICAgICN7JGNvbG9yLXByZWZpeH0jeyRuYW1lfTogJGNvbG9yO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBAZWFjaCAkbmFtZSwgJGdyYXktdGhlbWUgaW4gJGdyYXktdGhlbWVzIHtcclxuICAgICAgI3skY29sb3ItZ3JheS1wcmVmaXh9I3skbmFtZX06ICRncmF5LXRoZW1lO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gU2FzcyBWYXJpYWJsZXNcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiRzcGFjZXItcmVmZXJlbmNlOiAxcmVtO1xyXG4kc3BhY2VyLXByZWZpeDogLS1zcGFjZXItO1xyXG4kc3BhY2VyczogKFxyXG4gIDA6IDAsXHJcbiAgMTogKCRzcGFjZXItcmVmZXJlbmNlICogMC4yNSksXHJcbiAgMjogKCRzcGFjZXItcmVmZXJlbmNlICogMC41KSxcclxuICAzOiAkc3BhY2VyLXJlZmVyZW5jZSxcclxuICA0OiAoJHNwYWNlci1yZWZlcmVuY2UgKiAxLjI1KSxcclxuICA1OiAoJHNwYWNlci1yZWZlcmVuY2UgKiAxLjUpLFxyXG4gIDY6ICgkc3BhY2VyLXJlZmVyZW5jZSAqIDMpLFxyXG4gIDc6ICgkc3BhY2VyLXJlZmVyZW5jZSAqIDYpLFxyXG4gIDg6ICgkc3BhY2VyLXJlZmVyZW5jZSAqIDkpLFxyXG4gIDk6ICgkc3BhY2VyLXJlZmVyZW5jZSAqIDEyKVxyXG4pO1xyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFNldCBzcGFjZXIgZnVuY3Rpb25cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkBmdW5jdGlvbiBzcGFjZXIoJHNwYWNlciwgJHRydWUtdmFsOmZhbHNlKSB7XHJcbiAgQGlmICR1c2UtY3NzLXZhciA9PSB0cnVlIHtcclxuICAgIEBpZiAkdHJ1ZS12YWwgPT0gdHJ1ZSB7XHJcbiAgICAgIEByZXR1cm4gbWFwLWdldCgkc3BhY2VycywgJHNwYWNlcik7IC8vVHJ1ZSBWYWxcclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICBAcmV0dXJuIHZhcigjeyRzcGFjZXItcHJlZml4fSN7JHNwYWNlcn0pOyAvL0NTUyBWYXJcclxuICAgIH1cclxuICB9IEBlbHNlIHtcclxuICAgIEByZXR1cm4gbWFwLWdldCgkc3BhY2VycywgJHNwYWNlcik7IC8vRGlzYWJsZWQgQ1NTIFZhclxyXG4gIH1cclxufVxyXG5cclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFNldCByb290IHZhcmlhYmxlc1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQGlmICR1c2UtY3NzLXZhciA9PSB0cnVlIHtcclxuICAjeyRyb290LWRlZmF1bHR9IHtcclxuICAgIEBlYWNoICRuYW1lLCAkc3BhY2VyIGluICRzcGFjZXJzIHtcclxuICAgICAgI3skc3BhY2VyLXByZWZpeH0jeyRuYW1lfTogJHNwYWNlcjtcclxuICAgIH1cclxuICB9XHJcbn0iLCIua3NzLWJ0biB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBjb2xvci1ncmF5KDYwKTtcclxuICAgIGNvbG9yOiBjb2xvci1ncmF5KDYwKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgcGFkZGluZzogMC4ycmVtIDAuNXJlbTtcclxuICAgIGxpbmUtaGVpZ2h0OiAxO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cclxuICAgICY6aG92ZXJ7XHJcbiAgICAgICAgY29sb3I6IGNvbG9yLWdyYXkoNzApO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgfVxyXG59IiwiJGJ1cmdlci1zaXplOiA2MHB4O1xyXG4kYnVyZ2VyLWNvbG9yOiBjb2xvci1ncmF5KDApO1xyXG5cclxuLmtzcy1idXJnZXItY29udGFpbmVye1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgei1pbmRleDogeihrc3MtYnVyZ2VyKTtcclxuXHJcbiAgQGluY2x1ZGUgbWluKGJwKGxnKSl7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuXHJcbiAgJjphZnRlcntcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgYm9yZGVyLXdpZHRoOiAwIDgwMHB4IDMyMHB4IDA7XHJcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IGNvbG9yKHByaW1hcnkpIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIGJvdHRvbTogLTMyMHB4O1xyXG4gIH1cclxufVxyXG5cclxuYnV0dG9uLmtzcy1idXJnZXIge1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGNvbG9yOiAkYnVyZ2VyLWNvbG9yO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGNvbG9yKHByaW1hcnkpO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcGFkZGluZzogc3BhY2VyKDIpIHNwYWNlcig0KTtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICBzcGFuLmJ1cmdlci1pY29uIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDI1cHg7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICAvL0ZJWCBCTFVSIEJVRy9JU1NVRSBPTiBDSFJPTUVcclxuICAgIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCkgc2NhbGUoMSwgMSk7XHJcblxyXG4gICAgJjphZnRlcixcclxuICAgICY6YmVmb3JlLFxyXG4gICAgc3BhbiB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogMTAwcHg7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgbGVmdDogMHB4O1xyXG4gICAgICBiYWNrZ3JvdW5kOiAkYnVyZ2VyLWNvbG9yO1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuNHM7XHJcbiAgICB9XHJcblxyXG4gICAgJjphZnRlcixcclxuICAgICY6YmVmb3JlIHtcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgIH1cclxuXHJcbiAgICAmOmFmdGVyIHtcclxuICAgICAgdG9wOiAwcHg7XHJcbiAgICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgIH1cclxuXHJcbiAgICAmOmJlZm9yZSB7XHJcbiAgICAgIGJvdHRvbTogMHB4O1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgc3BhbiB7XHJcbiAgICAgIHRvcDogNTAlO1xyXG4gICAgICAvL21hcmdpbi10b3A6IC0ycHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLmlzLWFjdGl2ZSB7XHJcbiAgICBzcGFuLmJ1cmdlci1pY29uIHtcclxuICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKXRyYW5zbGF0ZSg3cHgsIC03cHgpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMjI1ZGVnKTtcclxuICAgICAgICBib3R0b206IDUwJTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAtMnB4O1xyXG4gICAgICB9XHJcblxyXG4gICAgICBzcGFuIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxMzVkZWcpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiQGZvciAkaSBmcm9tIDEgdGhyb3VnaCA2IHtcclxuICAua3NzLWgjeyRpfSB7XHJcbiAgICBjb2xvcjogY29sb3ItZ3JheSgxMDApO1xyXG4gICAgZm9udC1mYW1pbHk6IGZvbnQtZmFtaWx5KHRpdGxlKTtcclxuICAgIGZvbnQtc2l6ZTogZm9udC1zaXplKCRpKTtcclxuICAgIG1hcmdpbi1ib3R0b206IHNwYWNlcigxKTtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgfVxyXG59XHJcblxyXG4ua3NzLWgxLFxyXG4ua3NzLWgyIHtcclxuICBtYXJnaW4tdG9wOiBzcGFjZXIoOCk7XHJcbn1cclxuXHJcbi5rc3MtaDMsXHJcbi5rc3MtaDQge1xyXG4gIG1hcmdpbi10b3A6IHNwYWNlcig2KTtcclxufVxyXG5cclxuLmtzcy1oNSxcclxuLmtzcy1oNiB7XHJcbiAgbWFyZ2luLXRvcDogc3BhY2VyKDQpO1xyXG59XHJcblxyXG4ua3NzLWgxIHtcclxuICAua3NzLXNlY3Rpb25fX3JlZiB7XHJcbiAgICBjb2xvcjogY29sb3IocHJpbWFyeSk7XHJcbiAgfVxyXG59XHJcbiIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBTYXNzIFZhcmlhYmxlc1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuJGZvbnQtc2l6ZS1wcmVmaXg6IC0tZm9udC1zaXplLTtcclxuJGZvbnQtc2l6ZXM6IChcclxuICByb290OiAxNnB4LFxyXG4gIHBhcmFncmFwaDogMXJlbSxcclxuICAxOiAyLjgxMjVyZW0sXHJcbiAgMjogMnJlbSxcclxuICAzOiAxLjVyZW0sXHJcbiAgNDogMS4yNXJlbSxcclxuICA1OiAxLjE1cmVtLFxyXG4gIDY6IDFyZW0sXHJcbiAgYnV0dG9uOiAxcmVtXHJcbik7XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuLy8gU2V0IGZvbnQtc2l6ZSBmdW5jdGlvblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuQGZ1bmN0aW9uIGZvbnQtc2l6ZSgkZm9udC1zaXplLCAkdHJ1ZS12YWw6ZmFsc2UpIHtcclxuICBAaWYgJHVzZS1jc3MtdmFyID09IHRydWUge1xyXG4gICAgQGlmICR0cnVlLXZhbCA9PSB0cnVlIHtcclxuICAgICAgQHJldHVybiBtYXAtZ2V0KCRmb250LXNpemVzLCAkZm9udC1zaXplKTsgLy8gVHJ1ZSBWYWxcclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICBAcmV0dXJuIHZhcigjeyRmb250LXNpemUtcHJlZml4fSN7JGZvbnQtc2l6ZX0pOyAvLyBDU1MgVmFyXHJcbiAgICB9XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAcmV0dXJuIG1hcC1nZXQoJGZvbnQtc2l6ZXMsICRmb250LXNpemUpOyAvLyBEaXNhYmxlZCBDU1MgVmFyXHJcbiAgfVxyXG59XHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBTZXQgcm9vdCB2YXJpYWJsZXNcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbkBpZiAkdXNlLWNzcy12YXIgPT0gdHJ1ZSB7XHJcbiAgI3skcm9vdC1kZWZhdWx0fSB7XHJcbiAgICBAZWFjaCAkbmFtZSwgJGZvbnQtc2l6ZSBpbiAkZm9udC1zaXplcyB7XHJcbiAgICAgICN7JGZvbnQtc2l6ZS1wcmVmaXh9I3skbmFtZX06ICRmb250LXNpemU7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLmtzcy1pcy1uby1zY3JvbGx7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufSIsIi5rc3MtbmF2aWdhdGlvbntcclxuICBcclxuICB1bC5rc3MtbmF2e1xyXG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuXHJcbiAgICB1bC5rc3Mtc3VibmF2e1xyXG4gICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogc3BhY2VyKDIpO1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiBzcGFjZXIoMyk7XHJcblxyXG4gICAgICAua3NzLW5hdi1saW5re1xyXG4gICAgICAgIHBhZGRpbmc6IHNwYWNlcigxKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgbGkuaXMtZ3JhbmRjaGlsZHtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IHNwYWNlcigyKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLmtzcy1uYXYtbGlua3tcclxuICAgIGNvbG9yOiBjb2xvci1ncmF5KDcwKTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIHBhZGRpbmc6IHNwYWNlcigyKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgXHJcbiAgICAmOmhvdmVyLCAmOmZvY3VzIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogY29sb3ItZ3JheSgyMCk7XHJcbiAgICAgIG91dGxpbmUtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICBib3gtc2hhZG93OiAwIDAgMCB0cmFuc3BhcmVudDtcclxuICAgIH1cclxuXHJcbiAgICAmLmlzLWFjdGl2ZXtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IocHJpbWFyeSwgbGlnaHQpO1xyXG5cclxuICAgICAgJjpob3ZlciwgJjpmb2N1cyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IocHJpbWFyeSwgbGlnaHQpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmtzcy1uYXZfX3JlZntcclxuICAgICAgZm9udC1zaXplOiBjYWxjKCN7Zm9udC1zaXplKHBhcmFncmFwaCl9IC0gMC4xNXJlbSk7XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLmtzcy1zZWFyY2h7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG1hcmdpbi1ib3R0b206IHNwYWNlcigzKTtcclxuXHJcbiAgI2tzcy1zZWFyY2hfX2lucHV0e1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBjb2xvci1ncmF5KDUwKTtcclxuICAgIHBhZGRpbmc6IHNwYWNlcigyKTtcclxuICAgIGNvbG9yOiBjb2xvci1ncmF5KDcwKTtcclxuICAgIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzIGVhc2UtaW4tb3V0O1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgICY6aG92ZXIsICY6Zm9jdXN7XHJcbiAgICAgIGJvcmRlci1jb2xvcjogY29sb3ItZ3JheSg3MCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAja3NzLXNlYXJjaF9fbGlzdHtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBtYXgtaGVpZ2h0OiAyNTBweDtcclxuICAgIG92ZXJmbG93LXk6IGF1dG87XHJcbiAgICBwYWRkaW5nOiBzcGFjZXIoMik7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvci1ncmF5KDApO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgY29sb3ItZ3JheSg1MCk7XHJcbiAgICBib3JkZXItdG9wOiAwO1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuXHJcbiAgICBhe1xyXG4gICAgICBjb2xvcjogY29sb3ItZ3JheSg3MCk7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgICAgJjpob3ZlciwgJjpmb2N1c3tcclxuICAgICAgICBjb2xvcjogY29sb3ItZ3JheSg3MCk7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn0iLCIua3NzLXNpZGViYXIge1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgcGFkZGluZzogc3BhY2VyKDMpO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGNvbG9yLWdyYXkoMTApO1xyXG4gIG92ZXJmbG93LXk6IGF1dG87XHJcbiAgcG9zaXRpb246IHN0aWNreTtcclxuICB0b3A6IDA7XHJcbiAgei1pbmRleDogeihrc3Mtc2lkZWJhcik7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuXHJcbiAgJi5pcy1hY3RpdmV7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwdnc7XHJcbiAgICBwYWRkaW5nOiBzcGFjZXIoNikgc3BhY2VyKDMpO1xyXG4gIH1cclxuXHJcbiAgQGluY2x1ZGUgbWluKGJwKGxnKSl7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuXHJcbiAgICAmLmlzLWFjdGl2ZXtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICB0b3A6IGF1dG87XHJcbiAgICAgIGxlZnQ6IGF1dG87XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBwYWRkaW5nOiBzcGFjZXIoMyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi5rc3Mtc2VjdGlvbl9fcGVybWFsaW5rIHtcclxuICAmOmhvdmVyLFxyXG4gICY6Zm9jdXMge1xyXG4gICAgY29sb3I6IGNvbG9yKHByaW1hcnkpO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgfVxyXG59XHJcbi5rc3Mtc2VjdGlvbl9fc291cmNlIHtcclxuICBjb2xvcjogY29sb3ItZ3JheSg2MCk7XHJcbiAgZm9udC1zaXplOiBjYWxjKCN7Zm9udC1zaXplKHBhcmFncmFwaCl9IC0gMC4xcmVtKTtcclxufVxyXG5cclxuLmtzcy1zZWN0aW9uX19kZXNjcmlwdGlvbiB7XHJcbiAgbWFyZ2luLXRvcDogMXJlbTtcclxuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xyXG4gIFxyXG4gIHAge1xyXG4gICAgY29sb3I6IGNvbG9yLWdyYXkoMTAwKTtcclxuICAgIGZvbnQtZmFtaWx5OiBmb250LWZhbWlseShwYXJhZ3JhcGgpO1xyXG4gICAgZm9udC1zaXplOiBmb250LXNpemUocGFyYWdyYXBoKTtcclxuICB9XHJcblxyXG4gIGEge1xyXG4gICAgY29sb3I6IGNvbG9yKHByaW1hcnkpO1xyXG5cclxuICAgICY6aG92ZXIsXHJcbiAgICAmOmZvY3VzIHtcclxuICAgICAgY29sb3I6IGNvbG9yKHByaW1hcnkpO1xyXG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGNvZGUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogY29sb3ItZ3JheSgzMCk7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IHNwYWNlcigxKTtcclxuICAgIHBhZGRpbmctcmlnaHQ6IHNwYWNlcigxKTtcclxuICB9XHJcblxyXG4gIGJsb2NrcXVvdGUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogY29sb3ItZ3JheSgxMCk7XHJcbiAgICBwYWRkaW5nOiBzcGFjZXIoMyk7XHJcbiAgICBib3JkZXItbGVmdDogc3BhY2VyKDIpIHNvbGlkIGNvbG9yLWdyYXkoMzApO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogc3BhY2VyKDMpO1xyXG4gIH1cclxuXHJcbiAgLmtzcy1pZnJhbWV7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogNTAwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4ua3NzLXNlY3Rpb25fX2V4YW1wbGUtY29udGFpbmVyIHtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgYm9yZGVyOiAzcHggc29saWQgY29sb3ItZ3JheSgzMCk7XHJcblxyXG4gIHByZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0ge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIH1cclxuXHJcbiAgY29kZVtjbGFzcyo9XCJsYW5ndWFnZS1cIl0sXHJcbiAgcHJlW2NsYXNzKj1cImxhbmd1YWdlLVwiXSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvci1ncmF5KDMwKTtcclxuXHJcbiAgICA6Oi1tb3otc2VsZWN0aW9uIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogY29sb3IocHJpbWFyeSk7XHJcbiAgICAgIGNvbG9yOiBjb2xvci1ncmF5KDEwMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyogV29ya3MgaW4gU2FmYXJpICovXHJcbiAgICA6OnNlbGVjdGlvbiB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvcihwcmltYXJ5KTtcclxuICAgICAgICAgIGNvbG9yOiBjb2xvci1ncmF5KDEwMCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAua3NzLXNlY3Rpb25fX2V4YW1wbGVzIHtcclxuICAgIHBhZGRpbmc6IHNwYWNlcigzKTtcclxuICAgIG92ZXJmbG93LXg6IGF1dG87XHJcblxyXG4gICAgLmtzcy1tb2RpZmllcnNfX2hlYWRpbmcge1xyXG4gICAgICBmb250LXNpemU6IGZvbnQtc2l6ZSgzKTtcclxuICAgIH1cclxuXHJcbiAgICBjb2RlLmtzcy1tb2RpZmllcnNfX25hbWUge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvci1ncmF5KDMwKTtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IHNwYWNlcigxKTtcclxuICAgICAgcGFkZGluZy1yaWdodDogc3BhY2VyKDEpO1xyXG4gICAgICBtYXJnaW4tdG9wOiBzcGFjZXIoNSk7XHJcbiAgICB9XHJcblxyXG4gICAgLmtzcy1tb2RpZmllcnNfX2V4YW1wbGUge1xyXG4gICAgICBtYXJnaW4tdG9wOiBzcGFjZXIoMyk7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IHNwYWNlcig2KTtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiBzcGFjZXIoMCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAua3NzLWJveHtcclxuICAgICAgYmFja2dyb3VuZDogY29sb3IocHJpbWFyeSk7XHJcbiAgICAgIGNvbG9yOiBjb2xvcihwcmltYXJ5LCBjb250cmFzdCk7XHJcbiAgICAgIHBhZGRpbmc6IHNwYWNlcigzKTtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbiNrc3MtbWFwLWNvbG9yc3tcclxuICAua3NzLWNvbG9yLWl0ZW17XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC1nYXA6IDFyZW07XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcclxuICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjQ0NDQ0NDO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcclxuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNXB4KSB7XHJcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XHJcbiAgICB9XHJcblxyXG4gICAgLmtzcy1jb2xvci1pdGVtLWNoaWxke1xyXG4gICAgICBwYWRkaW5nOiA0cHg7XHJcbiAgICAgIHBhZGRpbmctdG9wOiA4MHB4O1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjQ0NDQ0NDO1xyXG5cclxuICAgICAgJjpmaXJzdC1jaGlsZHtcclxuICAgICAgICBncmlkLWNvbHVtbjogc3BhbiAyO1xyXG5cclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAyNXB4KSB7XHJcbiAgICAgICAgICBncmlkLWNvbHVtbjogYXV0bztcclxuICAgICAgICAgIGdyaWQtcm93OiBzcGFuIDI7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAua3NzLWNvbG9yLWl0ZW0tbGVnZW5ke1xyXG4gICAgICAgIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG5cclxuICAgICAgICBwOm50aC1sYXN0LWNoaWxkKDEpIHtcclxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufSIsIi5rc3MtbWFya2Rvd24ge1xyXG4gIG1hcmdpbi10b3A6IHNwYWNlcig4KTtcclxuXHJcbiAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCA2IHtcclxuICAgIGgjeyRpfSB7XHJcbiAgICAgIGNvbG9yOiBjb2xvci1ncmF5KDEwMCk7XHJcbiAgICAgIGZvbnQtZmFtaWx5OiBmb250LWZhbWlseSh0aXRsZSk7XHJcbiAgICAgIGZvbnQtc2l6ZTogZm9udC1zaXplKCRpKTtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogc3BhY2VyKDEpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaDEsXHJcbiAgaDIge1xyXG4gICAgbWFyZ2luLXRvcDogc3BhY2VyKDgpO1xyXG4gIH1cclxuXHJcbiAgaDMsXHJcbiAgaDQge1xyXG4gICAgbWFyZ2luLXRvcDogc3BhY2VyKDYpO1xyXG4gIH1cclxuXHJcbiAgaDUsXHJcbiAgaDYge1xyXG4gICAgbWFyZ2luLXRvcDogc3BhY2VyKDQpO1xyXG4gIH1cclxuXHJcbiAgYSB7XHJcbiAgICBjb2xvcjogY29sb3IocHJpbWFyeSk7XHJcblxyXG4gICAgJjpob3ZlcixcclxuICAgICY6Zm9jdXMge1xyXG4gICAgICBjb2xvcjogY29sb3IocHJpbWFyeSk7XHJcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgY29kZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvci1ncmF5KDMwKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHBhZGRpbmctbGVmdDogc3BhY2VyKDEpO1xyXG4gICAgcGFkZGluZy1yaWdodDogc3BhY2VyKDEpO1xyXG4gIH1cclxuXHJcbiAgYmxvY2txdW90ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvci1ncmF5KDEwKTtcclxuICAgIHBhZGRpbmc6IHNwYWNlcigzKTtcclxuICAgIGJvcmRlci1sZWZ0OiBzcGFjZXIoMikgc29saWQgY29sb3ItZ3JheSgzMCk7XHJcbiAgICBtYXJnaW4tYm90dG9tOiBzcGFjZXIoMyk7XHJcbiAgfVxyXG5cclxuICBwIHtcclxuICAgIGNvbG9yOiBjb2xvci1ncmF5KDEwMCk7XHJcbiAgICBmb250LWZhbWlseTogZm9udC1mYW1pbHkocGFyYWdyYXBoKTtcclxuICAgIGZvbnQtc2l6ZTogZm9udC1zaXplKHBhcmFncmFwaCk7XHJcbiAgfVxyXG5cclxuICBpbWd7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuICBwcmUge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogc3BhY2VyKDMpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIH1cclxuXHJcbiAgcHJlIGNvZGUsXHJcbiAgcHJle1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogY29sb3ItZ3JheSgzMCk7XHJcbiAgfVxyXG59XHJcbiIsIi5rc3MtcGFnZS1jb250YWluZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGNvbG9yLWdyYXkoMCk7XHJcblxyXG4gICY6bm90KC5rc3MtaXMtZnVsbC13aWR0aCkge1xyXG4gICAgQHN1cHBvcnRzIChkaXNwbGF5OiBncmlkKSB7XHJcbiAgICAgIEBpbmNsdWRlIG1pbihicChsZykpIHtcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMzIwcHggMWZyO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XHJcbiAgICAgICAgICBcInNpZGViYXIgbWFpblwiXHJcbiAgICAgICAgICBcInNpZGViYXIgZm9vdGVyXCI7XHJcbiAgICAgICAgZ3JpZC1nYXA6IHNwYWNlcig0KTtcclxuXHJcbiAgICAgICAgLmtzcy1zaWRlYmFyIHtcclxuICAgICAgICAgIGdyaWQtYXJlYTogc2lkZWJhcjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5rc3MtbWFpbiB7XHJcbiAgICAgICAgICBncmlkLWFyZWE6IG1haW47XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjb2xvci1ncmF5KDApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmtzcy1mb290ZXIge1xyXG4gICAgICAgICAgZ3JpZC1hcmVhOiBmb290ZXI7XHJcbiAgICAgICAgICBhbGlnbi1zZWxmOiBlbmQ7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQHN1cHBvcnRzIG5vdCAoZGlzcGxheTogZ3JpZCkge1xyXG4gICAgICBAc3VwcG9ydHMgKGRpc3BsYXk6IGZsZXgpIHtcclxuICAgICAgICBAaW5jbHVkZSBtaW4oYnAobGcpKSB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICAgICAgICAgIC5rc3Mtc2lkZWJhciB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAzMjBweDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAua3NzLW1haW4ge1xyXG4gICAgICAgICAgICBmbGV4OiAxO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEBtZWRpYSBzY3JlZW4gYW5kICgtbXMtaGlnaC1jb250cmFzdDogYWN0aXZlKSxcclxuICAgICAgc2NyZWVuIGFuZCAoLW1zLWhpZ2gtY29udHJhc3Q6IG5vbmUpIHtcclxuICAgICAgQGluY2x1ZGUgbWluKGJwKGxnKSkge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcblxyXG4gICAgICAgIC5rc3Mtc2lkZWJhciB7XHJcbiAgICAgICAgICB3aWR0aDogMzIwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAua3NzLW1haW4ge1xyXG4gICAgICAgICAgZmxleDogMTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gICYua3NzLWlzLWZ1bGwtd2lkdGgge1xyXG4gICAgQHN1cHBvcnRzIChkaXNwbGF5OiBncmlkKSB7XHJcbiAgICAgIEBpbmNsdWRlIG1pbihicChsZykpIHtcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XHJcbiAgICAgICAgICBcIm1haW5cIlxyXG4gICAgICAgICAgXCJzaWRlYmFyXCJcclxuICAgICAgICAgIFwiZm9vdGVyXCI7XHJcbiAgICAgICAgLmtzcy1zaWRlYmFyIHtcclxuICAgICAgICAgIGdyaWQtYXJlYTogc2lkZWJhcjtcclxuICAgICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5rc3MtbWFpbiB7XHJcbiAgICAgICAgICBncmlkLWFyZWE6IG1haW47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAua3NzLWZvb3RlciB7XHJcbiAgICAgICAgICBncmlkLWFyZWE6IGZvb3RlcjtcclxuICAgICAgICAgIGFsaWduLXNlbGY6IGVuZDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAua3NzLWNvbnRhaW5lciB7XHJcbiAgICAgIHdpZHRoOiAxMDB2dztcclxuICAgICAgcGFkZGluZzogMDtcclxuXHJcbiAgICAgIC5rc3Mtc2VjdGlvbl9fZXhhbXBsZS1jb250YWluZXIge1xyXG4gICAgICAgIGJvcmRlci1sZWZ0OiAwO1xyXG4gICAgICAgIGJvcmRlci1yaWdodDogMDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAwO1xyXG5cclxuICAgICAgICAua3NzLXNlY3Rpb25fX2V4YW1wbGVzIHtcclxuICAgICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */
